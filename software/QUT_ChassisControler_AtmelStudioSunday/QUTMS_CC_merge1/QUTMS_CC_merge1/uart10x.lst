   1               		.file	"uart10x.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.text.__vector_25,"ax",@progbits
  12               	.global	__vector_25
  14               	__vector_25:
  15               	.LFB6:
  16               		.file 1 "utils/uart10x.c"
   1:utils/uart10x.c **** /*************************************************************************
   2:utils/uart10x.c **** Title:    Interrupt UART library with receive/transmit circular buffers
   3:utils/uart10x.c **** Author:   Peter Fleury <pfleury@gmx.ch>   http://jump.to/fleury
   4:utils/uart10x.c **** File:     $Id: uart.c,v 1.6.2.1 2007/07/01 11:14:38 peter Exp $
   5:utils/uart10x.c **** Software: AVR-GCC 4.1, AVR Libc 1.4.6 or higher
   6:utils/uart10x.c **** Hardware: any AVR with built-in UART, 
   7:utils/uart10x.c **** License:  GNU General Public License 
   8:utils/uart10x.c ****           
   9:utils/uart10x.c **** DESCRIPTION:
  10:utils/uart10x.c ****     An interrupt is generated when the UART has finished transmitting or
  11:utils/uart10x.c ****     receiving a byte. The interrupt handling routines use circular buffers
  12:utils/uart10x.c ****     for buffering received and transmitted data.
  13:utils/uart10x.c ****     
  14:utils/uart10x.c ****     The UART_RX_BUFFER_SIZE and UART_TX_BUFFER_SIZE variables define
  15:utils/uart10x.c ****     the buffer size in bytes. Note that these variables must be a 
  16:utils/uart10x.c ****     power of 2.
  17:utils/uart10x.c ****     
  18:utils/uart10x.c **** USAGE:
  19:utils/uart10x.c ****     Refere to the header file uart.h for a description of the routines. 
  20:utils/uart10x.c ****     See also example test_uart.c.
  21:utils/uart10x.c **** 
  22:utils/uart10x.c **** NOTES:
  23:utils/uart10x.c ****     Based on Atmel Application Note AVR306
  24:utils/uart10x.c ****                     
  25:utils/uart10x.c **** LICENSE:
  26:utils/uart10x.c ****     Copyright (C) 2006 Peter Fleury
  27:utils/uart10x.c **** 
  28:utils/uart10x.c ****     This program is free software; you can redistribute it and/or modify
  29:utils/uart10x.c ****     it under the terms of the GNU General Public License as published by
  30:utils/uart10x.c ****     the Free Software Foundation; either version 2 of the License, or
  31:utils/uart10x.c ****     any later version.
  32:utils/uart10x.c **** 
  33:utils/uart10x.c ****     This program is distributed in the hope that it will be useful,
  34:utils/uart10x.c ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  35:utils/uart10x.c ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  36:utils/uart10x.c ****     GNU General Public License for more details.
  37:utils/uart10x.c **** 	
  38:utils/uart10x.c **** 
  39:utils/uart10x.c **** MODIFICATIONS:
  40:utils/uart10x.c **** 	Aug 22 2011 - Code added and functions modified for dual serial ports - AK
  41:utils/uart10x.c ****                         
  42:utils/uart10x.c **** *************************************************************************/
  43:utils/uart10x.c **** #include <avr/io.h>
  44:utils/uart10x.c **** #include <avr/interrupt.h>
  45:utils/uart10x.c **** #include <avr/pgmspace.h>
  46:utils/uart10x.c **** //#include <avr/eeprom.h>
  47:utils/uart10x.c **** #include "uart.h"
  48:utils/uart10x.c **** 
  49:utils/uart10x.c **** 
  50:utils/uart10x.c **** 
  51:utils/uart10x.c **** /*
  52:utils/uart10x.c ****  *  constants and macros
  53:utils/uart10x.c ****  */
  54:utils/uart10x.c **** /* size of RX/TX buffers */
  55:utils/uart10x.c **** 
  56:utils/uart10x.c **** 
  57:utils/uart10x.c **** 
  58:utils/uart10x.c **** #define UART_RX_BUFFER_MASK ( UART_RX_BUFFER_SIZE - 1)
  59:utils/uart10x.c **** #define UART_TX_BUFFER_MASK ( UART_TX_BUFFER_SIZE - 1)
  60:utils/uart10x.c **** 
  61:utils/uart10x.c **** #define UART1_RX_BUFFER_MASK ( UART1_RX_BUFFER_SIZE - 1)
  62:utils/uart10x.c **** #define UART1_TX_BUFFER_MASK ( UART1_TX_BUFFER_SIZE - 1)
  63:utils/uart10x.c **** 
  64:utils/uart10x.c **** #if ( UART_RX_BUFFER_SIZE & UART_RX_BUFFER_MASK )
  65:utils/uart10x.c **** #error RX buffer size is not a power of 2
  66:utils/uart10x.c **** #endif
  67:utils/uart10x.c **** #if ( UART_TX_BUFFER_SIZE & UART_TX_BUFFER_MASK )
  68:utils/uart10x.c **** #error TX buffer size is not a power of 2
  69:utils/uart10x.c **** #endif
  70:utils/uart10x.c **** 
  71:utils/uart10x.c **** #if ( UART1_RX_BUFFER_SIZE & UART1_RX_BUFFER_MASK )
  72:utils/uart10x.c **** #error RX1 buffer size is not a power of 2
  73:utils/uart10x.c **** #endif
  74:utils/uart10x.c **** #if ( UART1_TX_BUFFER_SIZE & UART1_TX_BUFFER_MASK )
  75:utils/uart10x.c **** #error TX1 buffer size is not a power of 2
  76:utils/uart10x.c **** #endif
  77:utils/uart10x.c **** 
  78:utils/uart10x.c **** #if defined(__AVR_AT90S2313__) \
  79:utils/uart10x.c ****  || defined(__AVR_AT90S4414__) || defined(__AVR_AT90S4434__) \
  80:utils/uart10x.c ****  || defined(__AVR_AT90S8515__) || defined(__AVR_AT90S8535__) \
  81:utils/uart10x.c ****  || defined(__AVR_ATmega103__)
  82:utils/uart10x.c ****  /* old AVR classic or ATmega103 with one UART */
  83:utils/uart10x.c ****  #define AT90_UART
  84:utils/uart10x.c ****  #define UART0_RECEIVE_INTERRUPT   SIG_UART_RECV
  85:utils/uart10x.c ****  #define UART0_TRANSMIT_INTERRUPT  SIG_UART_DATA
  86:utils/uart10x.c ****  #define UART0_STATUS   USR
  87:utils/uart10x.c ****  #define UART0_CONTROL  UCR
  88:utils/uart10x.c ****  #define UART0_DATA     UDR  
  89:utils/uart10x.c ****  #define UART0_UDRIE    UDRIE
  90:utils/uart10x.c **** #elif defined(__AVR_AT90S2333__) || defined(__AVR_AT90S4433__)
  91:utils/uart10x.c ****  /* old AVR classic with one UART */
  92:utils/uart10x.c ****  #define AT90_UART
  93:utils/uart10x.c ****  #define UART0_RECEIVE_INTERRUPT   SIG_UART_RECV
  94:utils/uart10x.c ****  #define UART0_TRANSMIT_INTERRUPT  SIG_UART_DATA
  95:utils/uart10x.c ****  #define UART0_STATUS   UCSRA
  96:utils/uart10x.c ****  #define UART0_CONTROL  UCSRB
  97:utils/uart10x.c ****  #define UART0_DATA     UDR 
  98:utils/uart10x.c ****  #define UART0_UDRIE    UDRIE
  99:utils/uart10x.c **** #elif  defined(__AVR_ATmega8__)  || defined(__AVR_ATmega16__) || defined(__AVR_ATmega32__) \
 100:utils/uart10x.c ****   || defined(__AVR_ATmega8515__) || defined(__AVR_ATmega8535__) \
 101:utils/uart10x.c ****   || defined(__AVR_ATmega323__)
 102:utils/uart10x.c ****   /* ATmega with one USART */
 103:utils/uart10x.c ****  #define ATMEGA_USART
 104:utils/uart10x.c ****  #define UART0_RECEIVE_INTERRUPT   SIG_UART_RECV
 105:utils/uart10x.c ****  #define UART0_TRANSMIT_INTERRUPT  SIG_UART_DATA
 106:utils/uart10x.c ****  #define UART0_STATUS   UCSRA
 107:utils/uart10x.c ****  #define UART0_CONTROL  UCSRB
 108:utils/uart10x.c ****  #define UART0_DATA     UDR
 109:utils/uart10x.c ****  #define UART0_UDRIE    UDRIE
 110:utils/uart10x.c **** #elif defined(__AVR_ATmega163__) 
 111:utils/uart10x.c ****   /* ATmega163 with one UART */
 112:utils/uart10x.c ****  #define ATMEGA_UART
 113:utils/uart10x.c ****  #define UART0_RECEIVE_INTERRUPT   SIG_UART_RECV
 114:utils/uart10x.c ****  #define UART0_TRANSMIT_INTERRUPT  SIG_UART_DATA
 115:utils/uart10x.c ****  #define UART0_STATUS   UCSRA
 116:utils/uart10x.c ****  #define UART0_CONTROL  UCSRB
 117:utils/uart10x.c ****  #define UART0_DATA     UDR
 118:utils/uart10x.c ****  #define UART0_UDRIE    UDRIE
 119:utils/uart10x.c **** #elif defined(__AVR_ATmega162__) 
 120:utils/uart10x.c ****  /* ATmega with two USART */
 121:utils/uart10x.c ****  #define ATMEGA_USART0
 122:utils/uart10x.c ****  #define ATMEGA_USART1
 123:utils/uart10x.c ****  #define UART0_RECEIVE_INTERRUPT   SIG_USART0_RECV
 124:utils/uart10x.c ****  #define UART1_RECEIVE_INTERRUPT   SIG_USART1_RECV
 125:utils/uart10x.c ****  #define UART0_TRANSMIT_INTERRUPT  SIG_USART0_DATA
 126:utils/uart10x.c ****  #define UART1_TRANSMIT_INTERRUPT  SIG_USART1_DATA
 127:utils/uart10x.c ****  #define UART0_STATUS   UCSR0A
 128:utils/uart10x.c ****  #define UART0_CONTROL  UCSR0B
 129:utils/uart10x.c ****  #define UART0_DATA     UDR0
 130:utils/uart10x.c ****  #define UART0_UDRIE    UDRIE0
 131:utils/uart10x.c ****  #define UART1_STATUS   UCSR1A
 132:utils/uart10x.c ****  #define UART1_CONTROL  UCSR1B
 133:utils/uart10x.c ****  #define UART1_DATA     UDR1
 134:utils/uart10x.c ****  #define UART1_UDRIE    UDRIE1
 135:utils/uart10x.c **** #elif defined(__AVR_ATmega64__) || defined(__AVR_ATmega128__) 
 136:utils/uart10x.c ****  /* ATmega with two USART */
 137:utils/uart10x.c ****  #define ATMEGA_USART0
 138:utils/uart10x.c ****  #define ATMEGA_USART1
 139:utils/uart10x.c ****  #define UART0_RECEIVE_INTERRUPT   SIG_UART0_RECV
 140:utils/uart10x.c ****  #define UART1_RECEIVE_INTERRUPT   SIG_UART1_RECV
 141:utils/uart10x.c ****  #define UART0_TRANSMIT_INTERRUPT  SIG_UART0_DATA
 142:utils/uart10x.c ****  #define UART1_TRANSMIT_INTERRUPT  SIG_UART1_DATA
 143:utils/uart10x.c ****  #define UART0_STATUS   UCSR0A
 144:utils/uart10x.c ****  #define UART0_CONTROL  UCSR0B
 145:utils/uart10x.c ****  #define UART0_DATA     UDR0
 146:utils/uart10x.c ****  #define UART0_UDRIE    UDRIE0
 147:utils/uart10x.c ****  #define UART1_STATUS   UCSR1A
 148:utils/uart10x.c ****  #define UART1_CONTROL  UCSR1B
 149:utils/uart10x.c ****  #define UART1_DATA     UDR1
 150:utils/uart10x.c ****  #define UART1_UDRIE    UDRIE1
 151:utils/uart10x.c **** #elif defined(__AVR_ATmega161__)
 152:utils/uart10x.c ****  /* ATmega with UART */
 153:utils/uart10x.c ****  #error "AVR ATmega161 currently not supported by this libaray !"
 154:utils/uart10x.c **** #elif defined(__AVR_ATmega169__) 
 155:utils/uart10x.c ****  /* ATmega with one USART */
 156:utils/uart10x.c ****  #define ATMEGA_USART
 157:utils/uart10x.c ****  #define UART0_RECEIVE_INTERRUPT   SIG_USART_RECV
 158:utils/uart10x.c ****  #define UART0_TRANSMIT_INTERRUPT  SIG_USART_DATA
 159:utils/uart10x.c ****   #define UART0_STATUS   UCSRA
 160:utils/uart10x.c ****  #define UART0_CONTROL  UCSRB
 161:utils/uart10x.c ****  #define UART0_DATA     UDR
 162:utils/uart10x.c ****  #define UART0_UDRIE    UDRIE
 163:utils/uart10x.c **** #elif defined(__AVR_ATmega48__) ||defined(__AVR_ATmega88__) || defined(__AVR_ATmega168__)
 164:utils/uart10x.c ****  /* ATmega with one USART */
 165:utils/uart10x.c ****  #define ATMEGA_USART0
 166:utils/uart10x.c ****  #define UART0_RECEIVE_INTERRUPT   SIG_USART_RECV
 167:utils/uart10x.c ****  #define UART0_TRANSMIT_INTERRUPT  SIG_USART_DATA
 168:utils/uart10x.c ****  #define UART0_STATUS   UCSR0A
 169:utils/uart10x.c ****  #define UART0_CONTROL  UCSR0B
 170:utils/uart10x.c ****  #define UART0_DATA     UDR0
 171:utils/uart10x.c ****  #define UART0_UDRIE    UDRIE0
 172:utils/uart10x.c **** #elif defined(__AVR_ATtiny2313__)
 173:utils/uart10x.c ****  #define ATMEGA_USART
 174:utils/uart10x.c ****  #define UART0_RECEIVE_INTERRUPT   SIG_USART0_RX 
 175:utils/uart10x.c ****  #define UART0_TRANSMIT_INTERRUPT  SIG_USART0_UDRE
 176:utils/uart10x.c ****  #define UART0_STATUS   UCSRA
 177:utils/uart10x.c ****  #define UART0_CONTROL  UCSRB
 178:utils/uart10x.c ****  #define UART0_DATA     UDR
 179:utils/uart10x.c ****  #define UART0_UDRIE    UDRIE
 180:utils/uart10x.c **** #elif defined(__AVR_ATmega329__) ||defined(__AVR_ATmega3290__) ||\
 181:utils/uart10x.c ****       defined(__AVR_ATmega649__) ||defined(__AVR_ATmega6490__) ||\
 182:utils/uart10x.c ****       defined(__AVR_ATmega325__) ||defined(__AVR_ATmega3250__) ||\
 183:utils/uart10x.c ****       defined(__AVR_ATmega645__) ||defined(__AVR_ATmega6450__)
 184:utils/uart10x.c ****   /* ATmega with one USART */
 185:utils/uart10x.c ****   #define ATMEGA_USART0
 186:utils/uart10x.c ****   #define UART0_RECEIVE_INTERRUPT   SIG_UART_RECV
 187:utils/uart10x.c ****   #define UART0_TRANSMIT_INTERRUPT  SIG_UART_DATA
 188:utils/uart10x.c ****   #define UART0_STATUS   UCSR0A
 189:utils/uart10x.c ****   #define UART0_CONTROL  UCSR0B
 190:utils/uart10x.c ****   #define UART0_DATA     UDR0
 191:utils/uart10x.c ****   #define UART0_UDRIE    UDRIE0
 192:utils/uart10x.c **** #elif defined(__AVR_ATmega2560__) || defined(__AVR_ATmega1280__) || defined(__AVR_ATmega640__) || d
 193:utils/uart10x.c **** /* ATmega with two USART *///  This def is used in GIC fw for 2560. Uarts 0 and 2 in use.
 194:utils/uart10x.c ****   #define ATMEGA_USART0
 195:utils/uart10x.c ****   #define ATMEGA_USART1
 196:utils/uart10x.c ****   #define UART0_RECEIVE_INTERRUPT   USART0_RX_vect
 197:utils/uart10x.c ****   #define UART1_RECEIVE_INTERRUPT   USART1_RX_vect
 198:utils/uart10x.c ****   #define UART0_TRANSMIT_INTERRUPT  USART0_UDRE_vect
 199:utils/uart10x.c ****   #define UART1_TRANSMIT_INTERRUPT  USART1_UDRE_vect
 200:utils/uart10x.c ****   #define UART0_STATUS   UCSR0A
 201:utils/uart10x.c ****   #define UART0_CONTROL  UCSR0B
 202:utils/uart10x.c ****   #define UART0_DATA     UDR0
 203:utils/uart10x.c ****   #define UART0_UDRIE    UDRIE0
 204:utils/uart10x.c ****   #define UART1_STATUS   UCSR1A
 205:utils/uart10x.c ****   #define UART1_CONTROL  UCSR1B
 206:utils/uart10x.c ****   #define UART1_DATA     UDR1
 207:utils/uart10x.c ****   #define UART1_UDRIE    UDRIE1  
 208:utils/uart10x.c **** #elif defined(__AVR_ATmega644__)
 209:utils/uart10x.c ****  /* ATmega with one USART */
 210:utils/uart10x.c ****  #define ATMEGA_USART0
 211:utils/uart10x.c ****  #define UART0_RECEIVE_INTERRUPT   SIG_USART_RECV
 212:utils/uart10x.c ****  #define UART0_TRANSMIT_INTERRUPT  SIG_USART_DATA
 213:utils/uart10x.c ****  #define UART0_STATUS   UCSR0A
 214:utils/uart10x.c ****  #define UART0_CONTROL  UCSR0B
 215:utils/uart10x.c ****  #define UART0_DATA     UDR0
 216:utils/uart10x.c ****  #define UART0_UDRIE    UDRIE0
 217:utils/uart10x.c **** #elif defined(__AVR_ATmega164P__) || defined(__AVR_ATmega324P__) || defined(__AVR_ATmega644P__)
 218:utils/uart10x.c ****  /* ATmega with two USART */
 219:utils/uart10x.c ****  #define ATMEGA_USART0
 220:utils/uart10x.c ****  #define ATMEGA_USART1
 221:utils/uart10x.c ****  #define UART0_RECEIVE_INTERRUPT   SIG_USART_RECV
 222:utils/uart10x.c ****  #define UART1_RECEIVE_INTERRUPT   SIG_USART1_RECV
 223:utils/uart10x.c ****  #define UART0_TRANSMIT_INTERRUPT  SIG_USART_DATA
 224:utils/uart10x.c ****  #define UART1_TRANSMIT_INTERRUPT  SIG_USART1_DATA
 225:utils/uart10x.c ****  #define UART0_STATUS   UCSR0A
 226:utils/uart10x.c ****  #define UART0_CONTROL  UCSR0B
 227:utils/uart10x.c ****  #define UART0_DATA     UDR0
 228:utils/uart10x.c ****  #define UART0_UDRIE    UDRIE0
 229:utils/uart10x.c ****  #define UART1_STATUS   UCSR1A
 230:utils/uart10x.c ****  #define UART1_CONTROL  UCSR1B
 231:utils/uart10x.c ****  #define UART1_DATA     UDR1
 232:utils/uart10x.c ****  #define UART1_UDRIE    UDRIE1
 233:utils/uart10x.c **** #elif defined(__AVR_ATxmega128A1__)
 234:utils/uart10x.c **** /*ATxmegaA3 with 7 USARTS */
 235:utils/uart10x.c ****  #define ATxmega_USART0
 236:utils/uart10x.c ****  #define ATxmega_USART1
 237:utils/uart10x.c ****  #define ATxmega_USART2
 238:utils/uart10x.c ****  #define ATxmega_USART3
 239:utils/uart10x.c ****  #define ATxmega_USART4
 240:utils/uart10x.c ****  #define ATxmega_USART5
 241:utils/uart10x.c ****  #define ATxmega_USART6
 242:utils/uart10x.c **** 
 243:utils/uart10x.c **** #else
 244:utils/uart10x.c ****  #error "no UART definition for MCU available"
 245:utils/uart10x.c **** #endif
 246:utils/uart10x.c **** 
 247:utils/uart10x.c **** 
 248:utils/uart10x.c **** /*
 249:utils/uart10x.c ****  *  module global variables
 250:utils/uart10x.c ****  */
 251:utils/uart10x.c **** static volatile unsigned char UART_TxBuf[UART_TX_BUFFER_SIZE];
 252:utils/uart10x.c **** static volatile unsigned char UART_RxBuf[UART_RX_BUFFER_SIZE];
 253:utils/uart10x.c **** static volatile unsigned char UART_TxHead;
 254:utils/uart10x.c **** static volatile unsigned char UART_TxTail;
 255:utils/uart10x.c **** static volatile unsigned char UART_RxHead;
 256:utils/uart10x.c **** static volatile unsigned char UART_RxTail;
 257:utils/uart10x.c **** static volatile unsigned char UART_LastRxError;
 258:utils/uart10x.c **** 
 259:utils/uart10x.c **** #if defined( ATMEGA_USART1 )
 260:utils/uart10x.c **** static volatile unsigned char UART1_TxBuf[UART_TX_BUFFER_SIZE];
 261:utils/uart10x.c **** static volatile unsigned char UART1_RxBuf[UART_RX_BUFFER_SIZE];
 262:utils/uart10x.c **** static volatile unsigned char UART1_TxHead;
 263:utils/uart10x.c **** static volatile unsigned char UART1_TxTail;
 264:utils/uart10x.c **** static volatile unsigned char UART1_RxHead;
 265:utils/uart10x.c **** static volatile unsigned char UART1_RxTail;
 266:utils/uart10x.c **** static volatile unsigned char UART1_LastRxError;
 267:utils/uart10x.c **** #endif
 268:utils/uart10x.c **** 
 269:utils/uart10x.c **** 
 270:utils/uart10x.c **** 
 271:utils/uart10x.c **** SIGNAL(UART0_RECEIVE_INTERRUPT)
 272:utils/uart10x.c **** //************************************************************************
 273:utils/uart10x.c **** //Function: UART Receive Complete interrupt
 274:utils/uart10x.c **** //Purpose:  called when the UART has received a character
 275:utils/uart10x.c **** //************************************************************************
 276:utils/uart10x.c **** {
  17               		.loc 1 276 1 view -0
  18               		.cfi_startproc
  19 0000 2F93 2FB7 		__gcc_isr 1
  19      2F93 
  20 0006 2BB7      		in r18,__RAMPZ__
  21 0008 2F93      		push r18
  22 000a 8F93      		push r24
  23               	.LCFI0:
  24               		.cfi_def_cfa_offset 3
  25               		.cfi_offset 24, -2
  26 000c 9F93      		push r25
  27               	.LCFI1:
  28               		.cfi_def_cfa_offset 4
  29               		.cfi_offset 25, -3
  30 000e EF93      		push r30
  31               	.LCFI2:
  32               		.cfi_def_cfa_offset 5
  33               		.cfi_offset 30, -4
  34 0010 FF93      		push r31
  35               	.LCFI3:
  36               		.cfi_def_cfa_offset 6
  37               		.cfi_offset 31, -5
  38               	/* prologue: Signal */
  39               	/* frame size = 0 */
  40               	/* stack size = 5...9 */
  41               	.L__stack_usage = 5 + __gcc_isr.n_pushed
 277:utils/uart10x.c ****     unsigned char tmphead;
  42               		.loc 1 277 5 view .LVU1
 278:utils/uart10x.c ****     unsigned char data;
  43               		.loc 1 278 5 view .LVU2
 279:utils/uart10x.c ****     unsigned char usr;
  44               		.loc 1 279 5 view .LVU3
 280:utils/uart10x.c ****     unsigned char lastRxError;
  45               		.loc 1 280 5 view .LVU4
 281:utils/uart10x.c **** 
 282:utils/uart10x.c **** 		
 283:utils/uart10x.c ****  
 284:utils/uart10x.c ****     // read UART status register and UART data register
 285:utils/uart10x.c ****     usr  = UART0_STATUS;
  46               		.loc 1 285 5 view .LVU5
  47               		.loc 1 285 10 is_stmt 0 view .LVU6
  48 0012 8091 C000 		lds r24,192
  49               	.LVL0:
 286:utils/uart10x.c ****     data = UART0_DATA;
  50               		.loc 1 286 5 is_stmt 1 view .LVU7
  51               		.loc 1 286 10 is_stmt 0 view .LVU8
  52 0016 9091 C600 		lds r25,198
  53               	.LVL1:
 287:utils/uart10x.c ****     
 288:utils/uart10x.c ****  
 289:utils/uart10x.c **** #if defined( AT90_UART )
 290:utils/uart10x.c ****     lastRxError = (usr & (_BV(FE)|_BV(DOR)) );
 291:utils/uart10x.c **** #elif defined( ATMEGA_USART )
 292:utils/uart10x.c ****     lastRxError = (usr & (_BV(FE)|_BV(DOR)) );
 293:utils/uart10x.c **** #elif defined( ATMEGA_USART0 )
 294:utils/uart10x.c ****     lastRxError = (usr & (_BV(FE0)|_BV(DOR0)) );
  54               		.loc 1 294 5 is_stmt 1 view .LVU9
 295:utils/uart10x.c **** #elif defined ( ATMEGA_UART )
 296:utils/uart10x.c ****     lastRxError = (usr & (_BV(FE)|_BV(DOR)) );
 297:utils/uart10x.c **** #endif
 298:utils/uart10x.c ****         
 299:utils/uart10x.c ****     // calculate buffer index 
 300:utils/uart10x.c ****     tmphead = ( UART_RxHead + 1) & UART_RX_BUFFER_MASK;
  55               		.loc 1 300 5 view .LVU10
  56               		.loc 1 300 34 is_stmt 0 view .LVU11
  57 001a E091 0000 		lds r30,UART_RxHead
  58               		.loc 1 300 29 view .LVU12
  59 001e EF5F      		subi r30,lo8(-(1))
  60               		.loc 1 300 13 view .LVU13
  61 0020 EF71      		andi r30,lo8(31)
  62               	.LVL2:
 301:utils/uart10x.c ****     
 302:utils/uart10x.c ****     if ( tmphead == UART_RxTail ) {
  63               		.loc 1 302 5 is_stmt 1 view .LVU14
  64               		.loc 1 302 18 is_stmt 0 view .LVU15
  65 0022 2091 0000 		lds r18,UART_RxTail
  66               		.loc 1 302 8 view .LVU16
  67 0026 2E17      		cp r18,r30
  68 0028 01F0      		breq .L3
 294:utils/uart10x.c **** #elif defined ( ATMEGA_UART )
  69               		.loc 1 294 17 view .LVU17
  70 002a 8871      		andi r24,lo8(24)
  71               	.LVL3:
 303:utils/uart10x.c ****         // error: receive buffer overflow 
 304:utils/uart10x.c ****         lastRxError = UART_BUFFER_OVERFLOW >> 8;
 305:utils/uart10x.c ****     }else{
 306:utils/uart10x.c ****         // store new index 
 307:utils/uart10x.c ****         UART_RxHead = tmphead;
  72               		.loc 1 307 9 is_stmt 1 view .LVU18
  73               		.loc 1 307 21 is_stmt 0 view .LVU19
  74 002c E093 0000 		sts UART_RxHead,r30
 308:utils/uart10x.c ****         // store received data in buffer 
 309:utils/uart10x.c ****        UART_RxBuf[tmphead] = data;
  75               		.loc 1 309 8 is_stmt 1 view .LVU20
  76               		.loc 1 309 18 is_stmt 0 view .LVU21
  77 0030 F0E0      		ldi r31,0
  78               		.loc 1 309 28 view .LVU22
  79 0032 E050      		subi r30,lo8(-(UART_RxBuf))
  80 0034 F040      		sbci r31,hi8(-(UART_RxBuf))
  81               	.LVL4:
  82               		.loc 1 309 28 view .LVU23
  83 0036 9083      		st Z,r25
  84               	.LVL5:
  85               	.L2:
 310:utils/uart10x.c ****     }
 311:utils/uart10x.c ****     UART_LastRxError = lastRxError;   
  86               		.loc 1 311 5 is_stmt 1 view .LVU24
  87               		.loc 1 311 22 is_stmt 0 view .LVU25
  88 0038 8093 0000 		sts UART_LastRxError,r24
  89               	/* epilogue start */
 312:utils/uart10x.c **** 	
 313:utils/uart10x.c **** }
  90               		.loc 1 313 1 view .LVU26
  91 003c FF91      		pop r31
  92 003e EF91      		pop r30
  93 0040 9F91      		pop r25
  94               	.LVL6:
  95               		.loc 1 313 1 view .LVU27
  96 0042 8F91      		pop r24
  97               	.LVL7:
  98               		.loc 1 313 1 view .LVU28
  99 0044 2F91      		pop r18
 100 0046 2BBF      		out __RAMPZ__,r18
 101               	.LVL8:
 102               		.loc 1 313 1 view .LVU29
 103 0048 2F91 2FBF 		__gcc_isr 2
 103      2F91 
 104 004e 1895      		reti
 105               	.LVL9:
 106               	.L3:
 304:utils/uart10x.c ****     }else{
 107               		.loc 1 304 21 view .LVU30
 108 0050 82E0      		ldi r24,lo8(2)
 109               	.LVL10:
 304:utils/uart10x.c ****     }else{
 110               		.loc 1 304 21 view .LVU31
 111 0052 00C0      		rjmp .L2
 112               		__gcc_isr 0,r18
 113               		.cfi_endproc
 114               	.LFE6:
 116               		.section	.text.__vector_36,"ax",@progbits
 117               	.global	__vector_36
 119               	__vector_36:
 120               	.LFB7:
 314:utils/uart10x.c **** 
 315:utils/uart10x.c **** SIGNAL(UART1_RECEIVE_INTERRUPT)
 316:utils/uart10x.c **** //************************************************************************
 317:utils/uart10x.c **** //Function: UART Receive Complete interrupt
 318:utils/uart10x.c **** //Purpose:  called when the UART has received a character
 319:utils/uart10x.c **** //************************************************************************
 320:utils/uart10x.c **** {
 121               		.loc 1 320 1 is_stmt 1 view -0
 122               		.cfi_startproc
 123 0000 2F93 2FB7 		__gcc_isr 1
 123      2F93 
 124 0006 2BB7      		in r18,__RAMPZ__
 125 0008 2F93      		push r18
 126 000a 8F93      		push r24
 127               	.LCFI4:
 128               		.cfi_def_cfa_offset 3
 129               		.cfi_offset 24, -2
 130 000c 9F93      		push r25
 131               	.LCFI5:
 132               		.cfi_def_cfa_offset 4
 133               		.cfi_offset 25, -3
 134 000e EF93      		push r30
 135               	.LCFI6:
 136               		.cfi_def_cfa_offset 5
 137               		.cfi_offset 30, -4
 138 0010 FF93      		push r31
 139               	.LCFI7:
 140               		.cfi_def_cfa_offset 6
 141               		.cfi_offset 31, -5
 142               	/* prologue: Signal */
 143               	/* frame size = 0 */
 144               	/* stack size = 5...9 */
 145               	.L__stack_usage = 5 + __gcc_isr.n_pushed
 321:utils/uart10x.c ****     unsigned char tmphead1;
 146               		.loc 1 321 5 view .LVU33
 322:utils/uart10x.c ****     unsigned char data1;
 147               		.loc 1 322 5 view .LVU34
 323:utils/uart10x.c ****     unsigned char usr1;
 148               		.loc 1 323 5 view .LVU35
 324:utils/uart10x.c ****     unsigned char lastRxError1;
 149               		.loc 1 324 5 view .LVU36
 325:utils/uart10x.c **** 
 326:utils/uart10x.c **** 		
 327:utils/uart10x.c ****  
 328:utils/uart10x.c ****     // read UART status register and UART data register
 329:utils/uart10x.c ****     usr1  = UART1_STATUS;
 150               		.loc 1 329 5 view .LVU37
 151               		.loc 1 329 11 is_stmt 0 view .LVU38
 152 0012 8091 C800 		lds r24,200
 153               	.LVL11:
 330:utils/uart10x.c ****     data1 = UART1_DATA;
 154               		.loc 1 330 5 is_stmt 1 view .LVU39
 155               		.loc 1 330 11 is_stmt 0 view .LVU40
 156 0016 9091 CE00 		lds r25,206
 157               	.LVL12:
 331:utils/uart10x.c ****     
 332:utils/uart10x.c ****  
 333:utils/uart10x.c **** #if defined( AT90_UART )
 334:utils/uart10x.c ****     lastRxError1 = (usr1 & (_BV(FE)|_BV(DOR)) );
 335:utils/uart10x.c **** #elif defined( ATMEGA_USART )
 336:utils/uart10x.c ****     lastRxError1 = (usr1 & (_BV(FE)|_BV(DOR)) );
 337:utils/uart10x.c **** #elif defined( ATMEGA_USART0 )
 338:utils/uart10x.c ****     lastRxError1 = (usr1 & (_BV(FE0)|_BV(DOR0)) );
 158               		.loc 1 338 5 is_stmt 1 view .LVU41
 339:utils/uart10x.c **** #elif defined ( ATMEGA_UART )
 340:utils/uart10x.c ****     lastRxError1 = (usr1 & (_BV(FE)|_BV(DOR)) );
 341:utils/uart10x.c **** #endif
 342:utils/uart10x.c ****         
 343:utils/uart10x.c ****     // calculate buffer index 
 344:utils/uart10x.c ****     tmphead1 = ( UART1_RxHead + 1) & UART1_RX_BUFFER_MASK;
 159               		.loc 1 344 5 view .LVU42
 160               		.loc 1 344 36 is_stmt 0 view .LVU43
 161 001a E091 0000 		lds r30,UART1_RxHead
 162               		.loc 1 344 31 view .LVU44
 163 001e EF5F      		subi r30,lo8(-(1))
 164               		.loc 1 344 14 view .LVU45
 165 0020 EF71      		andi r30,lo8(31)
 166               	.LVL13:
 345:utils/uart10x.c ****     
 346:utils/uart10x.c ****     if ( tmphead1 == UART1_RxTail ) {
 167               		.loc 1 346 5 is_stmt 1 view .LVU46
 168               		.loc 1 346 19 is_stmt 0 view .LVU47
 169 0022 2091 0000 		lds r18,UART1_RxTail
 170               		.loc 1 346 8 view .LVU48
 171 0026 2E17      		cp r18,r30
 172 0028 01F0      		breq .L6
 338:utils/uart10x.c **** #elif defined ( ATMEGA_UART )
 173               		.loc 1 338 18 view .LVU49
 174 002a 8871      		andi r24,lo8(24)
 175               	.LVL14:
 347:utils/uart10x.c ****         // error: receive buffer overflow 
 348:utils/uart10x.c ****         lastRxError1 = UART_BUFFER_OVERFLOW >> 8;
 349:utils/uart10x.c ****     }else{
 350:utils/uart10x.c ****         // store new index 
 351:utils/uart10x.c ****         UART1_RxHead = tmphead1;
 176               		.loc 1 351 9 is_stmt 1 view .LVU50
 177               		.loc 1 351 22 is_stmt 0 view .LVU51
 178 002c E093 0000 		sts UART1_RxHead,r30
 352:utils/uart10x.c ****         // store received data in buffer 
 353:utils/uart10x.c ****        UART1_RxBuf[tmphead1] = data1;
 179               		.loc 1 353 8 is_stmt 1 view .LVU52
 180               		.loc 1 353 19 is_stmt 0 view .LVU53
 181 0030 F0E0      		ldi r31,0
 182               		.loc 1 353 30 view .LVU54
 183 0032 E050      		subi r30,lo8(-(UART1_RxBuf))
 184 0034 F040      		sbci r31,hi8(-(UART1_RxBuf))
 185               	.LVL15:
 186               		.loc 1 353 30 view .LVU55
 187 0036 9083      		st Z,r25
 188               	.LVL16:
 189               	.L5:
 354:utils/uart10x.c ****     }
 355:utils/uart10x.c ****     UART1_LastRxError = lastRxError1;   
 190               		.loc 1 355 5 is_stmt 1 view .LVU56
 191               		.loc 1 355 23 is_stmt 0 view .LVU57
 192 0038 8093 0000 		sts UART1_LastRxError,r24
 193               	/* epilogue start */
 356:utils/uart10x.c **** 	
 357:utils/uart10x.c **** }
 194               		.loc 1 357 1 view .LVU58
 195 003c FF91      		pop r31
 196 003e EF91      		pop r30
 197 0040 9F91      		pop r25
 198               	.LVL17:
 199               		.loc 1 357 1 view .LVU59
 200 0042 8F91      		pop r24
 201               	.LVL18:
 202               		.loc 1 357 1 view .LVU60
 203 0044 2F91      		pop r18
 204 0046 2BBF      		out __RAMPZ__,r18
 205               	.LVL19:
 206               		.loc 1 357 1 view .LVU61
 207 0048 2F91 2FBF 		__gcc_isr 2
 207      2F91 
 208 004e 1895      		reti
 209               	.LVL20:
 210               	.L6:
 348:utils/uart10x.c ****     }else{
 211               		.loc 1 348 22 view .LVU62
 212 0050 82E0      		ldi r24,lo8(2)
 213               	.LVL21:
 348:utils/uart10x.c ****     }else{
 214               		.loc 1 348 22 view .LVU63
 215 0052 00C0      		rjmp .L5
 216               		__gcc_isr 0,r18
 217               		.cfi_endproc
 218               	.LFE7:
 220               		.section	.text.__vector_26,"ax",@progbits
 221               	.global	__vector_26
 223               	__vector_26:
 224               	.LFB8:
 358:utils/uart10x.c **** 
 359:utils/uart10x.c **** 
 360:utils/uart10x.c **** SIGNAL(UART0_TRANSMIT_INTERRUPT)
 361:utils/uart10x.c **** /*************************************************************************
 362:utils/uart10x.c **** Function: UART Data Register Empty interrupt
 363:utils/uart10x.c **** Purpose:  called when the UART is ready to transmit the next byte
 364:utils/uart10x.c **** **************************************************************************/
 365:utils/uart10x.c **** {
 225               		.loc 1 365 1 is_stmt 1 view -0
 226               		.cfi_startproc
 227 0000 8F93 8FB7 		__gcc_isr 1
 227      8F93 
 228 0006 8BB7      		in r24,__RAMPZ__
 229 0008 8F93      		push r24
 230 000a 9F93      		push r25
 231               	.LCFI8:
 232               		.cfi_def_cfa_offset 3
 233               		.cfi_offset 25, -2
 234 000c EF93      		push r30
 235               	.LCFI9:
 236               		.cfi_def_cfa_offset 4
 237               		.cfi_offset 30, -3
 238 000e FF93      		push r31
 239               	.LCFI10:
 240               		.cfi_def_cfa_offset 5
 241               		.cfi_offset 31, -4
 242               	/* prologue: Signal */
 243               	/* frame size = 0 */
 244               	/* stack size = 4...8 */
 245               	.L__stack_usage = 4 + __gcc_isr.n_pushed
 366:utils/uart10x.c ****     unsigned char tmptail;
 246               		.loc 1 366 5 view .LVU65
 367:utils/uart10x.c ****     
 368:utils/uart10x.c ****     if ( UART_TxHead != UART_TxTail) {
 247               		.loc 1 368 5 view .LVU66
 248               		.loc 1 368 22 is_stmt 0 view .LVU67
 249 0010 9091 0000 		lds r25,UART_TxHead
 250 0014 8091 0000 		lds r24,UART_TxTail
 251               		.loc 1 368 8 view .LVU68
 252 0018 9817      		cp r25,r24
 253 001a 01F0      		breq .L8
 369:utils/uart10x.c ****         /* calculate and store new buffer index */
 370:utils/uart10x.c ****         tmptail = (UART_TxTail + 1) & UART_TX_BUFFER_MASK;
 254               		.loc 1 370 9 is_stmt 1 view .LVU69
 255               		.loc 1 370 37 is_stmt 0 view .LVU70
 256 001c E091 0000 		lds r30,UART_TxTail
 257               		.loc 1 370 32 view .LVU71
 258 0020 EF5F      		subi r30,lo8(-(1))
 259               		.loc 1 370 17 view .LVU72
 260 0022 EF71      		andi r30,lo8(31)
 261               	.LVL22:
 371:utils/uart10x.c ****         UART_TxTail = tmptail;
 262               		.loc 1 371 9 is_stmt 1 view .LVU73
 263               		.loc 1 371 21 is_stmt 0 view .LVU74
 264 0024 E093 0000 		sts UART_TxTail,r30
 372:utils/uart10x.c ****         /* get one byte from buffer and write it to UART */
 373:utils/uart10x.c ****         UART0_DATA = UART_TxBuf[tmptail];  /* start transmission */
 265               		.loc 1 373 9 is_stmt 1 view .LVU75
 266               		.loc 1 373 32 is_stmt 0 view .LVU76
 267 0028 F0E0      		ldi r31,0
 268 002a E050      		subi r30,lo8(-(UART_TxBuf))
 269 002c F040      		sbci r31,hi8(-(UART_TxBuf))
 270               	.LVL23:
 271               		.loc 1 373 32 view .LVU77
 272 002e 8081      		ld r24,Z
 273               		.loc 1 373 20 view .LVU78
 274 0030 8093 C600 		sts 198,r24
 275               	.LVL24:
 276               	.L7:
 277               	/* epilogue start */
 374:utils/uart10x.c ****     }else{
 375:utils/uart10x.c ****         /* tx buffer empty, disable UDRE interrupt */
 376:utils/uart10x.c ****         UART0_CONTROL &= ~(1 << UART0_UDRIE);
 377:utils/uart10x.c ****     }
 378:utils/uart10x.c **** }
 278               		.loc 1 378 1 view .LVU79
 279 0034 FF91      		pop r31
 280 0036 EF91      		pop r30
 281 0038 9F91      		pop r25
 282 003a 8F91      		pop r24
 283 003c 8BBF      		out __RAMPZ__,r24
 284 003e 8F91 8FBF 		__gcc_isr 2
 284      8F91 
 285 0044 1895      		reti
 286               	.L8:
 376:utils/uart10x.c ****     }
 287               		.loc 1 376 9 is_stmt 1 view .LVU80
 376:utils/uart10x.c ****     }
 288               		.loc 1 376 23 is_stmt 0 view .LVU81
 289 0046 8091 C100 		lds r24,193
 290 004a 8F7D      		andi r24,lo8(-33)
 291 004c 8093 C100 		sts 193,r24
 292               		.loc 1 378 1 view .LVU82
 293 0050 00C0      		rjmp .L7
 294               		__gcc_isr 0,r24
 295               		.cfi_endproc
 296               	.LFE8:
 298               		.section	.text.__vector_37,"ax",@progbits
 299               	.global	__vector_37
 301               	__vector_37:
 302               	.LFB9:
 379:utils/uart10x.c **** 
 380:utils/uart10x.c **** SIGNAL(UART1_TRANSMIT_INTERRUPT)
 381:utils/uart10x.c **** /*************************************************************************
 382:utils/uart10x.c **** Function: UART1 Data Register Empty interrupt
 383:utils/uart10x.c **** Purpose:  called when the UART1 is ready to transmit the next byte
 384:utils/uart10x.c **** **************************************************************************/
 385:utils/uart10x.c **** {
 303               		.loc 1 385 1 is_stmt 1 view -0
 304               		.cfi_startproc
 305 0000 8F93 8FB7 		__gcc_isr 1
 305      8F93 
 306 0006 8BB7      		in r24,__RAMPZ__
 307 0008 8F93      		push r24
 308 000a 9F93      		push r25
 309               	.LCFI11:
 310               		.cfi_def_cfa_offset 3
 311               		.cfi_offset 25, -2
 312 000c EF93      		push r30
 313               	.LCFI12:
 314               		.cfi_def_cfa_offset 4
 315               		.cfi_offset 30, -3
 316 000e FF93      		push r31
 317               	.LCFI13:
 318               		.cfi_def_cfa_offset 5
 319               		.cfi_offset 31, -4
 320               	/* prologue: Signal */
 321               	/* frame size = 0 */
 322               	/* stack size = 4...8 */
 323               	.L__stack_usage = 4 + __gcc_isr.n_pushed
 386:utils/uart10x.c ****     unsigned char tmptail1;
 324               		.loc 1 386 5 view .LVU84
 387:utils/uart10x.c **** 
 388:utils/uart10x.c ****     
 389:utils/uart10x.c ****     if ( UART1_TxHead != UART1_TxTail) {
 325               		.loc 1 389 5 view .LVU85
 326               		.loc 1 389 23 is_stmt 0 view .LVU86
 327 0010 9091 0000 		lds r25,UART1_TxHead
 328 0014 8091 0000 		lds r24,UART1_TxTail
 329               		.loc 1 389 8 view .LVU87
 330 0018 9817      		cp r25,r24
 331 001a 01F0      		breq .L11
 390:utils/uart10x.c ****         /* calculate and store new buffer index */
 391:utils/uart10x.c ****         tmptail1 = (UART1_TxTail + 1) & UART1_TX_BUFFER_MASK;
 332               		.loc 1 391 9 is_stmt 1 view .LVU88
 333               		.loc 1 391 39 is_stmt 0 view .LVU89
 334 001c E091 0000 		lds r30,UART1_TxTail
 335               		.loc 1 391 34 view .LVU90
 336 0020 EF5F      		subi r30,lo8(-(1))
 337               		.loc 1 391 18 view .LVU91
 338 0022 EF71      		andi r30,lo8(31)
 339               	.LVL25:
 392:utils/uart10x.c ****         UART1_TxTail = tmptail1;
 340               		.loc 1 392 9 is_stmt 1 view .LVU92
 341               		.loc 1 392 22 is_stmt 0 view .LVU93
 342 0024 E093 0000 		sts UART1_TxTail,r30
 393:utils/uart10x.c ****         /* get one byte from buffer and write it to UART */
 394:utils/uart10x.c ****         UART1_DATA = UART1_TxBuf[tmptail1];  /* start transmission */
 343               		.loc 1 394 9 is_stmt 1 view .LVU94
 344               		.loc 1 394 33 is_stmt 0 view .LVU95
 345 0028 F0E0      		ldi r31,0
 346 002a E050      		subi r30,lo8(-(UART1_TxBuf))
 347 002c F040      		sbci r31,hi8(-(UART1_TxBuf))
 348               	.LVL26:
 349               		.loc 1 394 33 view .LVU96
 350 002e 8081      		ld r24,Z
 351               		.loc 1 394 20 view .LVU97
 352 0030 8093 CE00 		sts 206,r24
 353               	.LVL27:
 354               	.L10:
 355               	/* epilogue start */
 395:utils/uart10x.c ****     }else{
 396:utils/uart10x.c ****         /* tx buffer empty, disable UDRE interrupt */
 397:utils/uart10x.c ****         UART1_CONTROL &= ~(1 << UART1_UDRIE);
 398:utils/uart10x.c ****     }
 399:utils/uart10x.c **** }
 356               		.loc 1 399 1 view .LVU98
 357 0034 FF91      		pop r31
 358 0036 EF91      		pop r30
 359 0038 9F91      		pop r25
 360 003a 8F91      		pop r24
 361 003c 8BBF      		out __RAMPZ__,r24
 362 003e 8F91 8FBF 		__gcc_isr 2
 362      8F91 
 363 0044 1895      		reti
 364               	.L11:
 397:utils/uart10x.c ****     }
 365               		.loc 1 397 9 is_stmt 1 view .LVU99
 397:utils/uart10x.c ****     }
 366               		.loc 1 397 23 is_stmt 0 view .LVU100
 367 0046 8091 C900 		lds r24,201
 368 004a 8F7D      		andi r24,lo8(-33)
 369 004c 8093 C900 		sts 201,r24
 370               		.loc 1 399 1 view .LVU101
 371 0050 00C0      		rjmp .L10
 372               		__gcc_isr 0,r24
 373               		.cfi_endproc
 374               	.LFE9:
 376               		.section	.text.uart_init,"ax",@progbits
 377               	.global	uart_init
 379               	uart_init:
 380               	.LVL28:
 381               	.LFB10:
 400:utils/uart10x.c **** 
 401:utils/uart10x.c **** /*************************************************************************
 402:utils/uart10x.c **** Function: uart_init()
 403:utils/uart10x.c **** Purpose:  initialize UART and set baudrate
 404:utils/uart10x.c **** Input:    baudrate using macro UART_BAUD_SELECT()
 405:utils/uart10x.c **** Returns:  none
 406:utils/uart10x.c **** **************************************************************************/
 407:utils/uart10x.c **** void uart_init(unsigned int baudrate)
 408:utils/uart10x.c **** {
 382               		.loc 1 408 1 is_stmt 1 view -0
 383               		.cfi_startproc
 384               	/* prologue: function */
 385               	/* frame size = 0 */
 386               	/* stack size = 0 */
 387               	.L__stack_usage = 0
 409:utils/uart10x.c ****     UART_TxHead = 0;
 388               		.loc 1 409 5 view .LVU103
 389               		.loc 1 409 17 is_stmt 0 view .LVU104
 390 0000 1092 0000 		sts UART_TxHead,__zero_reg__
 410:utils/uart10x.c ****     UART_TxTail = 0;
 391               		.loc 1 410 5 is_stmt 1 view .LVU105
 392               		.loc 1 410 17 is_stmt 0 view .LVU106
 393 0004 1092 0000 		sts UART_TxTail,__zero_reg__
 411:utils/uart10x.c ****     UART_RxHead = 0;
 394               		.loc 1 411 5 is_stmt 1 view .LVU107
 395               		.loc 1 411 17 is_stmt 0 view .LVU108
 396 0008 1092 0000 		sts UART_RxHead,__zero_reg__
 412:utils/uart10x.c ****     UART_RxTail = 0;
 397               		.loc 1 412 5 is_stmt 1 view .LVU109
 398               		.loc 1 412 17 is_stmt 0 view .LVU110
 399 000c 1092 0000 		sts UART_RxTail,__zero_reg__
 413:utils/uart10x.c ****     
 414:utils/uart10x.c **** 	CLKPR = (1<<CLKPCE);  	//enable clock prescaler change
 400               		.loc 1 414 2 is_stmt 1 view .LVU111
 401               		.loc 1 414 8 is_stmt 0 view .LVU112
 402 0010 E1E6      		ldi r30,lo8(97)
 403 0012 F0E0      		ldi r31,0
 404 0014 80E8      		ldi r24,lo8(-128)
 405               	.LVL29:
 406               		.loc 1 414 8 view .LVU113
 407 0016 8083      		st Z,r24
 415:utils/uart10x.c **** 	CLKPR = 0x00;			//clock divide = 1  so  16MHz/1 = 16MHz
 408               		.loc 1 415 2 is_stmt 1 view .LVU114
 409               		.loc 1 415 8 is_stmt 0 view .LVU115
 410 0018 1082      		st Z,__zero_reg__
 416:utils/uart10x.c **** 
 417:utils/uart10x.c ****   	UBRR0H = 0;
 411               		.loc 1 417 4 is_stmt 1 view .LVU116
 412               		.loc 1 417 11 is_stmt 0 view .LVU117
 413 001a 1092 C500 		sts 197,__zero_reg__
 418:utils/uart10x.c ****     UBRR0L = 103;	//19200 baud for laptop/LCD info panel
 414               		.loc 1 418 5 is_stmt 1 view .LVU118
 415               		.loc 1 418 12 is_stmt 0 view .LVU119
 416 001e 87E6      		ldi r24,lo8(103)
 417 0020 8093 C400 		sts 196,r24
 419:utils/uart10x.c **** 
 420:utils/uart10x.c ****     /* Set frame format: asynchronous, 8data, no parity, 1stop bit */
 421:utils/uart10x.c **** 	UCSR0A = 2;		//2x on
 418               		.loc 1 421 2 is_stmt 1 view .LVU120
 419               		.loc 1 421 9 is_stmt 0 view .LVU121
 420 0024 82E0      		ldi r24,lo8(2)
 421 0026 8093 C000 		sts 192,r24
 422:utils/uart10x.c **** 	UCSR0B = 24;	//tx and rx on  AND rxie on for testing
 422               		.loc 1 422 2 is_stmt 1 view .LVU122
 423               		.loc 1 422 9 is_stmt 0 view .LVU123
 424 002a 88E1      		ldi r24,lo8(24)
 425 002c 8093 C100 		sts 193,r24
 423:utils/uart10x.c ****     UCSR0C = 6;		//8 - 1 - N
 426               		.loc 1 423 5 is_stmt 1 view .LVU124
 427               		.loc 1 423 12 is_stmt 0 view .LVU125
 428 0030 86E0      		ldi r24,lo8(6)
 429 0032 8093 C200 		sts 194,r24
 430               	/* epilogue start */
 424:utils/uart10x.c **** 
 425:utils/uart10x.c **** }/* uart_init */
 431               		.loc 1 425 1 view .LVU126
 432 0036 0895      		ret
 433               		.cfi_endproc
 434               	.LFE10:
 436               		.section	.text.uart1_init,"ax",@progbits
 437               	.global	uart1_init
 439               	uart1_init:
 440               	.LVL30:
 441               	.LFB11:
 426:utils/uart10x.c **** 
 427:utils/uart10x.c **** void uart1_init(unsigned int baudrate)
 428:utils/uart10x.c **** {
 442               		.loc 1 428 1 is_stmt 1 view -0
 443               		.cfi_startproc
 444               	/* prologue: function */
 445               	/* frame size = 0 */
 446               	/* stack size = 0 */
 447               	.L__stack_usage = 0
 429:utils/uart10x.c **** 	UART1_TxHead = 0;
 448               		.loc 1 429 2 view .LVU128
 449               		.loc 1 429 15 is_stmt 0 view .LVU129
 450 0000 1092 0000 		sts UART1_TxHead,__zero_reg__
 430:utils/uart10x.c ****     UART1_TxTail = 0;
 451               		.loc 1 430 5 is_stmt 1 view .LVU130
 452               		.loc 1 430 18 is_stmt 0 view .LVU131
 453 0004 1092 0000 		sts UART1_TxTail,__zero_reg__
 431:utils/uart10x.c ****     UART1_RxHead = 0;
 454               		.loc 1 431 5 is_stmt 1 view .LVU132
 455               		.loc 1 431 18 is_stmt 0 view .LVU133
 456 0008 1092 0000 		sts UART1_RxHead,__zero_reg__
 432:utils/uart10x.c ****     UART1_RxTail = 0;
 457               		.loc 1 432 5 is_stmt 1 view .LVU134
 458               		.loc 1 432 18 is_stmt 0 view .LVU135
 459 000c 1092 0000 		sts UART1_RxTail,__zero_reg__
 433:utils/uart10x.c **** 	
 434:utils/uart10x.c **** 	CLKPR = (1<<CLKPCE);  	//enable clock prescaler change
 460               		.loc 1 434 2 is_stmt 1 view .LVU136
 461               		.loc 1 434 8 is_stmt 0 view .LVU137
 462 0010 E1E6      		ldi r30,lo8(97)
 463 0012 F0E0      		ldi r31,0
 464 0014 80E8      		ldi r24,lo8(-128)
 465               	.LVL31:
 466               		.loc 1 434 8 view .LVU138
 467 0016 8083      		st Z,r24
 435:utils/uart10x.c **** 	CLKPR = 0x00;			//clock divide = 1  so  16MHz/1 = 16MHz
 468               		.loc 1 435 2 is_stmt 1 view .LVU139
 469               		.loc 1 435 8 is_stmt 0 view .LVU140
 470 0018 1082      		st Z,__zero_reg__
 436:utils/uart10x.c **** 	
 437:utils/uart10x.c **** 	UBRR1H = 0;
 471               		.loc 1 437 2 is_stmt 1 view .LVU141
 472               		.loc 1 437 9 is_stmt 0 view .LVU142
 473 001a 1092 CD00 		sts 205,__zero_reg__
 438:utils/uart10x.c ****     UBRR1L = 103;	// now 250k for CAN  19200 for testing    //9600 baud for gsm modem (207 with 2x 
 474               		.loc 1 438 5 is_stmt 1 view .LVU143
 475               		.loc 1 438 12 is_stmt 0 view .LVU144
 476 001e 87E6      		ldi r24,lo8(103)
 477 0020 8093 CC00 		sts 204,r24
 439:utils/uart10x.c ****     
 440:utils/uart10x.c ****     /* Set frame format: asynchronous, 8data, no parity, 1stop bit */
 441:utils/uart10x.c **** 	UCSR1A = 2;		//2x on
 478               		.loc 1 441 2 is_stmt 1 view .LVU145
 479               		.loc 1 441 9 is_stmt 0 view .LVU146
 480 0024 82E0      		ldi r24,lo8(2)
 481 0026 8093 C800 		sts 200,r24
 442:utils/uart10x.c **** 	UCSR1B = 24;	//tx and rx on AND rxie on
 482               		.loc 1 442 2 is_stmt 1 view .LVU147
 483               		.loc 1 442 9 is_stmt 0 view .LVU148
 484 002a 88E1      		ldi r24,lo8(24)
 485 002c 8093 C900 		sts 201,r24
 443:utils/uart10x.c ****     UCSR1C = 6;		//8 - 1 - N
 486               		.loc 1 443 5 is_stmt 1 view .LVU149
 487               		.loc 1 443 12 is_stmt 0 view .LVU150
 488 0030 86E0      		ldi r24,lo8(6)
 489 0032 8093 CA00 		sts 202,r24
 490               	/* epilogue start */
 444:utils/uart10x.c **** 
 445:utils/uart10x.c **** }/* uart1_init */
 491               		.loc 1 445 1 view .LVU151
 492 0036 0895      		ret
 493               		.cfi_endproc
 494               	.LFE11:
 496               		.section	.text.uart_getc,"ax",@progbits
 497               	.global	uart_getc
 499               	uart_getc:
 500               	.LFB12:
 446:utils/uart10x.c **** 
 447:utils/uart10x.c **** 
 448:utils/uart10x.c **** /*************************************************************************
 449:utils/uart10x.c **** Function: uart_getc()
 450:utils/uart10x.c **** Purpose:  return byte from ringbuffer  
 451:utils/uart10x.c **** Returns:  lower byte:  received byte from ringbuffer
 452:utils/uart10x.c ****           higher byte: last receive error
 453:utils/uart10x.c **** **************************************************************************/
 454:utils/uart10x.c **** unsigned int uart_getc(void)
 455:utils/uart10x.c **** {    
 501               		.loc 1 455 1 is_stmt 1 view -0
 502               		.cfi_startproc
 503               	/* prologue: function */
 504               	/* frame size = 0 */
 505               	/* stack size = 0 */
 506               	.L__stack_usage = 0
 456:utils/uart10x.c ****     unsigned char tmptail;
 507               		.loc 1 456 5 view .LVU153
 457:utils/uart10x.c ****     unsigned char data;
 508               		.loc 1 457 5 view .LVU154
 458:utils/uart10x.c **** 
 459:utils/uart10x.c **** 
 460:utils/uart10x.c ****     if ( UART_RxHead == UART_RxTail ) {
 509               		.loc 1 460 5 view .LVU155
 510               		.loc 1 460 22 is_stmt 0 view .LVU156
 511 0000 9091 0000 		lds r25,UART_RxHead
 512 0004 8091 0000 		lds r24,UART_RxTail
 513               		.loc 1 460 8 view .LVU157
 514 0008 9817      		cp r25,r24
 515 000a 01F0      		breq .L17
 461:utils/uart10x.c ****         return UART_NO_DATA;   /* no data available */
 462:utils/uart10x.c ****     }
 463:utils/uart10x.c ****     
 464:utils/uart10x.c ****     /* calculate /store buffer index */
 465:utils/uart10x.c ****     tmptail = (UART_RxTail + 1) & UART_RX_BUFFER_MASK;
 516               		.loc 1 465 5 is_stmt 1 view .LVU158
 517               		.loc 1 465 33 is_stmt 0 view .LVU159
 518 000c E091 0000 		lds r30,UART_RxTail
 519               		.loc 1 465 28 view .LVU160
 520 0010 EF5F      		subi r30,lo8(-(1))
 521               		.loc 1 465 13 view .LVU161
 522 0012 EF71      		andi r30,lo8(31)
 523               	.LVL32:
 466:utils/uart10x.c ****     UART_RxTail = tmptail; 
 524               		.loc 1 466 5 is_stmt 1 view .LVU162
 525               		.loc 1 466 17 is_stmt 0 view .LVU163
 526 0014 E093 0000 		sts UART_RxTail,r30
 467:utils/uart10x.c ****     
 468:utils/uart10x.c ****     /* get data from receive buffer */
 469:utils/uart10x.c ****     data = UART_RxBuf[tmptail];
 527               		.loc 1 469 5 is_stmt 1 view .LVU164
 528               		.loc 1 469 22 is_stmt 0 view .LVU165
 529 0018 F0E0      		ldi r31,0
 530               		.loc 1 469 10 view .LVU166
 531 001a E050      		subi r30,lo8(-(UART_RxBuf))
 532 001c F040      		sbci r31,hi8(-(UART_RxBuf))
 533               	.LVL33:
 534               		.loc 1 469 10 view .LVU167
 535 001e 2081      		ld r18,Z
 536               	.LVL34:
 470:utils/uart10x.c ****     
 471:utils/uart10x.c ****     return (UART_LastRxError << 8) + data;
 537               		.loc 1 471 5 is_stmt 1 view .LVU168
 538               		.loc 1 471 30 is_stmt 0 view .LVU169
 539 0020 9091 0000 		lds r25,UART_LastRxError
 540 0024 892F      		mov r24,r25
 541 0026 90E0      		ldi r25,0
 542 0028 982F      		mov r25,r24
 543 002a 8827      		clr r24
 544               		.loc 1 471 36 view .LVU170
 545 002c 820F      		add r24,r18
 546 002e 911D      		adc r25,__zero_reg__
 547 0030 0895      		ret
 548               	.LVL35:
 549               	.L17:
 461:utils/uart10x.c ****     }
 550               		.loc 1 461 16 view .LVU171
 551 0032 80E0      		ldi r24,0
 552 0034 91E0      		ldi r25,lo8(1)
 553               	/* epilogue start */
 472:utils/uart10x.c **** 
 473:utils/uart10x.c **** }/* uart_getc */
 554               		.loc 1 473 1 view .LVU172
 555 0036 0895      		ret
 556               		.cfi_endproc
 557               	.LFE12:
 559               		.section	.text.uart1_getc,"ax",@progbits
 560               	.global	uart1_getc
 562               	uart1_getc:
 563               	.LFB13:
 474:utils/uart10x.c **** 
 475:utils/uart10x.c **** unsigned int uart1_getc(void)
 476:utils/uart10x.c **** {    
 564               		.loc 1 476 1 is_stmt 1 view -0
 565               		.cfi_startproc
 566               	/* prologue: function */
 567               	/* frame size = 0 */
 568               	/* stack size = 0 */
 569               	.L__stack_usage = 0
 477:utils/uart10x.c ****     unsigned char tmptail1;
 570               		.loc 1 477 5 view .LVU174
 478:utils/uart10x.c ****     unsigned char data1;
 571               		.loc 1 478 5 view .LVU175
 479:utils/uart10x.c **** 
 480:utils/uart10x.c **** 
 481:utils/uart10x.c ****     if ( UART1_RxHead == UART1_RxTail ) {
 572               		.loc 1 481 5 view .LVU176
 573               		.loc 1 481 23 is_stmt 0 view .LVU177
 574 0000 9091 0000 		lds r25,UART1_RxHead
 575 0004 8091 0000 		lds r24,UART1_RxTail
 576               		.loc 1 481 8 view .LVU178
 577 0008 9817      		cp r25,r24
 578 000a 01F0      		breq .L20
 482:utils/uart10x.c ****         return UART_NO_DATA;   /* no data available */
 483:utils/uart10x.c ****     }
 484:utils/uart10x.c ****     
 485:utils/uart10x.c ****     /* calculate /store buffer index */
 486:utils/uart10x.c ****     tmptail1 = (UART1_RxTail + 1) & UART1_RX_BUFFER_MASK;
 579               		.loc 1 486 5 is_stmt 1 view .LVU179
 580               		.loc 1 486 35 is_stmt 0 view .LVU180
 581 000c E091 0000 		lds r30,UART1_RxTail
 582               		.loc 1 486 30 view .LVU181
 583 0010 EF5F      		subi r30,lo8(-(1))
 584               		.loc 1 486 14 view .LVU182
 585 0012 EF71      		andi r30,lo8(31)
 586               	.LVL36:
 487:utils/uart10x.c ****     UART1_RxTail = tmptail1; 
 587               		.loc 1 487 5 is_stmt 1 view .LVU183
 588               		.loc 1 487 18 is_stmt 0 view .LVU184
 589 0014 E093 0000 		sts UART1_RxTail,r30
 488:utils/uart10x.c ****     
 489:utils/uart10x.c ****     /* get data from receive buffer */
 490:utils/uart10x.c ****     data1 = UART1_RxBuf[tmptail1];
 590               		.loc 1 490 5 is_stmt 1 view .LVU185
 591               		.loc 1 490 24 is_stmt 0 view .LVU186
 592 0018 F0E0      		ldi r31,0
 593               		.loc 1 490 11 view .LVU187
 594 001a E050      		subi r30,lo8(-(UART1_RxBuf))
 595 001c F040      		sbci r31,hi8(-(UART1_RxBuf))
 596               	.LVL37:
 597               		.loc 1 490 11 view .LVU188
 598 001e 2081      		ld r18,Z
 599               	.LVL38:
 491:utils/uart10x.c ****     
 492:utils/uart10x.c ****     return (UART1_LastRxError << 8) + data1;
 600               		.loc 1 492 5 is_stmt 1 view .LVU189
 601               		.loc 1 492 31 is_stmt 0 view .LVU190
 602 0020 9091 0000 		lds r25,UART1_LastRxError
 603 0024 892F      		mov r24,r25
 604 0026 90E0      		ldi r25,0
 605 0028 982F      		mov r25,r24
 606 002a 8827      		clr r24
 607               		.loc 1 492 37 view .LVU191
 608 002c 820F      		add r24,r18
 609 002e 911D      		adc r25,__zero_reg__
 610 0030 0895      		ret
 611               	.LVL39:
 612               	.L20:
 482:utils/uart10x.c ****     }
 613               		.loc 1 482 16 view .LVU192
 614 0032 80E0      		ldi r24,0
 615 0034 91E0      		ldi r25,lo8(1)
 616               	/* epilogue start */
 493:utils/uart10x.c **** 
 494:utils/uart10x.c **** }/* uart1_getc */
 617               		.loc 1 494 1 view .LVU193
 618 0036 0895      		ret
 619               		.cfi_endproc
 620               	.LFE13:
 622               		.section	.text.uart_putc,"ax",@progbits
 623               	.global	uart_putc
 625               	uart_putc:
 626               	.LVL40:
 627               	.LFB14:
 495:utils/uart10x.c **** 
 496:utils/uart10x.c **** 
 497:utils/uart10x.c **** /*************************************************************************
 498:utils/uart10x.c **** Function: uart_putc()
 499:utils/uart10x.c **** Purpose:  write byte to ringbuffer for transmitting via UART, choosing the
 500:utils/uart10x.c **** 		  correct port to write to based on current traffic flow
 501:utils/uart10x.c **** Input:    byte to be transmitted
 502:utils/uart10x.c **** Returns:  none          
 503:utils/uart10x.c **** **************************************************************************/
 504:utils/uart10x.c **** void uart_putc(unsigned char data)
 505:utils/uart10x.c **** {	
 628               		.loc 1 505 1 is_stmt 1 view -0
 629               		.cfi_startproc
 630               	/* prologue: function */
 631               	/* frame size = 0 */
 632               	/* stack size = 0 */
 633               	.L__stack_usage = 0
 506:utils/uart10x.c **** 	unsigned char tmphead;
 634               		.loc 1 506 2 view .LVU195
 507:utils/uart10x.c **** 	
 508:utils/uart10x.c **** 	if (portKey == 0)
 635               		.loc 1 508 2 view .LVU196
 636               		.loc 1 508 14 is_stmt 0 view .LVU197
 637 0000 9091 0000 		lds r25,portKey
 638               		.loc 1 508 5 view .LVU198
 639 0004 9111      		cpse r25,__zero_reg__
 640 0006 00C0      		rjmp .L22
 509:utils/uart10x.c **** 	{
 510:utils/uart10x.c **** 		tmphead  = (UART_TxHead + 1) & UART_TX_BUFFER_MASK;
 641               		.loc 1 510 3 is_stmt 1 view .LVU199
 642               		.loc 1 510 32 is_stmt 0 view .LVU200
 643 0008 9091 0000 		lds r25,UART_TxHead
 644               		.loc 1 510 27 view .LVU201
 645 000c 9F5F      		subi r25,lo8(-(1))
 646               		.loc 1 510 12 view .LVU202
 647 000e 9F71      		andi r25,lo8(31)
 648               	.LVL41:
 511:utils/uart10x.c ****     
 512:utils/uart10x.c **** 		while ( tmphead == UART_TxTail ){
 649               		.loc 1 512 3 is_stmt 1 view .LVU203
 650               	.L23:
 513:utils/uart10x.c **** 			;// wait for free space in buffer 
 651               		.loc 1 513 4 discriminator 1 view .LVU204
 512:utils/uart10x.c **** 			;// wait for free space in buffer 
 652               		.loc 1 512 19 is_stmt 0 discriminator 1 view .LVU205
 653 0010 2091 0000 		lds r18,UART_TxTail
 512:utils/uart10x.c **** 			;// wait for free space in buffer 
 654               		.loc 1 512 9 discriminator 1 view .LVU206
 655 0014 2917      		cp r18,r25
 656 0016 01F0      		breq .L23
 514:utils/uart10x.c **** 		}
 515:utils/uart10x.c ****     
 516:utils/uart10x.c **** 		UART_TxBuf[tmphead] = data;
 657               		.loc 1 516 3 is_stmt 1 view .LVU207
 658               		.loc 1 516 13 is_stmt 0 view .LVU208
 659 0018 E92F      		mov r30,r25
 660 001a F0E0      		ldi r31,0
 661               		.loc 1 516 23 view .LVU209
 662 001c E050      		subi r30,lo8(-(UART_TxBuf))
 663 001e F040      		sbci r31,hi8(-(UART_TxBuf))
 664 0020 8083      		st Z,r24
 517:utils/uart10x.c **** 		UART_TxHead = tmphead;
 665               		.loc 1 517 3 is_stmt 1 view .LVU210
 666               		.loc 1 517 15 is_stmt 0 view .LVU211
 667 0022 9093 0000 		sts UART_TxHead,r25
 518:utils/uart10x.c **** 
 519:utils/uart10x.c **** 		// enable UDRE interrupt 
 520:utils/uart10x.c **** 		UART0_CONTROL |= (1 << UART0_UDRIE);
 668               		.loc 1 520 3 is_stmt 1 view .LVU212
 669               		.loc 1 520 17 is_stmt 0 view .LVU213
 670 0026 8091 C100 		lds r24,193
 671               	.LVL42:
 672               		.loc 1 520 17 view .LVU214
 673 002a 8062      		ori r24,lo8(32)
 674 002c 8093 C100 		sts 193,r24
 675 0030 0895      		ret
 676               	.LVL43:
 677               	.L22:
 521:utils/uart10x.c **** 		
 522:utils/uart10x.c **** 	}
 523:utils/uart10x.c **** 	
 524:utils/uart10x.c **** 	else if (portKey == 1)
 678               		.loc 1 524 7 is_stmt 1 view .LVU215
 679               		.loc 1 524 10 is_stmt 0 view .LVU216
 680 0032 9130      		cpi r25,lo8(1)
 681 0034 01F4      		brne .L21
 682               	.LVL44:
 683               	.LBB4:
 684               	.LBB5:
 525:utils/uart10x.c **** 	{
 526:utils/uart10x.c **** 		tmphead  = (UART1_TxHead + 1) & UART1_TX_BUFFER_MASK;
 685               		.loc 1 526 3 is_stmt 1 view .LVU217
 686               		.loc 1 526 33 is_stmt 0 view .LVU218
 687 0036 9091 0000 		lds r25,UART1_TxHead
 688               		.loc 1 526 28 view .LVU219
 689 003a 9F5F      		subi r25,lo8(-(1))
 690               		.loc 1 526 12 view .LVU220
 691 003c 9F71      		andi r25,lo8(31)
 692               	.LVL45:
 527:utils/uart10x.c ****     
 528:utils/uart10x.c **** 		while ( tmphead == UART1_TxTail ){
 693               		.loc 1 528 3 is_stmt 1 view .LVU221
 694               	.L25:
 529:utils/uart10x.c **** 			;// wait for free space in buffer 		
 695               		.loc 1 529 4 view .LVU222
 528:utils/uart10x.c **** 			;// wait for free space in buffer 		
 696               		.loc 1 528 19 is_stmt 0 view .LVU223
 697 003e 2091 0000 		lds r18,UART1_TxTail
 528:utils/uart10x.c **** 			;// wait for free space in buffer 		
 698               		.loc 1 528 9 view .LVU224
 699 0042 9217      		cp r25,r18
 700 0044 01F0      		breq .L25
 530:utils/uart10x.c **** 		}
 531:utils/uart10x.c **** 		//PORTH &= 251;
 532:utils/uart10x.c ****     
 533:utils/uart10x.c **** 		UART1_TxBuf[tmphead] = data;
 701               		.loc 1 533 3 is_stmt 1 view .LVU225
 702               		.loc 1 533 14 is_stmt 0 view .LVU226
 703 0046 E92F      		mov r30,r25
 704 0048 F0E0      		ldi r31,0
 705               		.loc 1 533 24 view .LVU227
 706 004a E050      		subi r30,lo8(-(UART1_TxBuf))
 707 004c F040      		sbci r31,hi8(-(UART1_TxBuf))
 708 004e 8083      		st Z,r24
 534:utils/uart10x.c **** 		UART1_TxHead = tmphead;
 709               		.loc 1 534 3 is_stmt 1 view .LVU228
 710               		.loc 1 534 16 is_stmt 0 view .LVU229
 711 0050 9093 0000 		sts UART1_TxHead,r25
 535:utils/uart10x.c **** 
 536:utils/uart10x.c **** 		// enable UDRE interrupt 
 537:utils/uart10x.c **** 		UART1_CONTROL |= (1 << UART1_UDRIE);	
 712               		.loc 1 537 3 is_stmt 1 view .LVU230
 713               		.loc 1 537 17 is_stmt 0 view .LVU231
 714 0054 8091 C900 		lds r24,201
 715               	.LVL46:
 716               		.loc 1 537 17 view .LVU232
 717 0058 8062      		ori r24,lo8(32)
 718 005a 8093 C900 		sts 201,r24
 719               	.LVL47:
 720               	.L21:
 721               	/* epilogue start */
 722               		.loc 1 537 17 view .LVU233
 723               	.LBE5:
 724               	.LBE4:
 538:utils/uart10x.c **** 	}		
 539:utils/uart10x.c **** 	
 540:utils/uart10x.c **** }/* uart_putc */
 725               		.loc 1 540 1 view .LVU234
 726 005e 0895      		ret
 727               		.cfi_endproc
 728               	.LFE14:
 730               		.section	.text.uart1_putc,"ax",@progbits
 731               	.global	uart1_putc
 733               	uart1_putc:
 734               	.LVL48:
 735               	.LFB15:
 541:utils/uart10x.c **** 
 542:utils/uart10x.c **** void uart1_putc(unsigned char data1)
 543:utils/uart10x.c **** {
 736               		.loc 1 543 1 is_stmt 1 view -0
 737               		.cfi_startproc
 738               	/* prologue: function */
 739               	/* frame size = 0 */
 740               	/* stack size = 0 */
 741               	.L__stack_usage = 0
 544:utils/uart10x.c **** 	
 545:utils/uart10x.c **** 	unsigned char tmphead;
 742               		.loc 1 545 2 view .LVU236
 546:utils/uart10x.c **** 	tmphead  = (UART1_TxHead + 1) & UART1_TX_BUFFER_MASK;
 743               		.loc 1 546 2 view .LVU237
 744               		.loc 1 546 32 is_stmt 0 view .LVU238
 745 0000 9091 0000 		lds r25,UART1_TxHead
 746               		.loc 1 546 27 view .LVU239
 747 0004 9F5F      		subi r25,lo8(-(1))
 748               		.loc 1 546 11 view .LVU240
 749 0006 9F71      		andi r25,lo8(31)
 750               	.LVL49:
 547:utils/uart10x.c ****     
 548:utils/uart10x.c **** 		while ( tmphead == UART1_TxTail ){
 751               		.loc 1 548 3 is_stmt 1 view .LVU241
 752               	.L29:
 549:utils/uart10x.c **** 			;// wait for free space in buffer 		
 753               		.loc 1 549 4 discriminator 1 view .LVU242
 548:utils/uart10x.c **** 			;// wait for free space in buffer 		
 754               		.loc 1 548 19 is_stmt 0 discriminator 1 view .LVU243
 755 0008 2091 0000 		lds r18,UART1_TxTail
 548:utils/uart10x.c **** 			;// wait for free space in buffer 		
 756               		.loc 1 548 9 discriminator 1 view .LVU244
 757 000c 2917      		cp r18,r25
 758 000e 01F0      		breq .L29
 550:utils/uart10x.c **** 		}
 551:utils/uart10x.c **** 		//PORTH &= 251;
 552:utils/uart10x.c ****     
 553:utils/uart10x.c **** 		UART1_TxBuf[tmphead] = data1;
 759               		.loc 1 553 3 is_stmt 1 view .LVU245
 760               		.loc 1 553 14 is_stmt 0 view .LVU246
 761 0010 E92F      		mov r30,r25
 762 0012 F0E0      		ldi r31,0
 763               		.loc 1 553 24 view .LVU247
 764 0014 E050      		subi r30,lo8(-(UART1_TxBuf))
 765 0016 F040      		sbci r31,hi8(-(UART1_TxBuf))
 766 0018 8083      		st Z,r24
 554:utils/uart10x.c **** 		UART1_TxHead = tmphead;
 767               		.loc 1 554 3 is_stmt 1 view .LVU248
 768               		.loc 1 554 16 is_stmt 0 view .LVU249
 769 001a 9093 0000 		sts UART1_TxHead,r25
 555:utils/uart10x.c **** 
 556:utils/uart10x.c **** 		// enable UDRE interrupt 
 557:utils/uart10x.c **** 		UART1_CONTROL |= (1 << UART1_UDRIE);	
 770               		.loc 1 557 3 is_stmt 1 view .LVU250
 771               		.loc 1 557 17 is_stmt 0 view .LVU251
 772 001e 8091 C900 		lds r24,201
 773               	.LVL50:
 774               		.loc 1 557 17 view .LVU252
 775 0022 8062      		ori r24,lo8(32)
 776 0024 8093 C900 		sts 201,r24
 777               	/* epilogue start */
 558:utils/uart10x.c **** 	    	
 559:utils/uart10x.c **** }/* uart1_putc */
 778               		.loc 1 559 1 view .LVU253
 779 0028 0895      		ret
 780               		.cfi_endproc
 781               	.LFE15:
 783               		.section	.text.uart_puts,"ax",@progbits
 784               	.global	uart_puts
 786               	uart_puts:
 787               	.LVL51:
 788               	.LFB16:
 560:utils/uart10x.c **** 
 561:utils/uart10x.c **** 
 562:utils/uart10x.c **** /*************************************************************************
 563:utils/uart10x.c **** Function: uart_puts()
 564:utils/uart10x.c **** Purpose:  transmit string to UART
 565:utils/uart10x.c **** Input:    string to be transmitted
 566:utils/uart10x.c **** Returns:  none          
 567:utils/uart10x.c **** **************************************************************************/
 568:utils/uart10x.c **** void uart_puts(const char *s )
 569:utils/uart10x.c **** {
 789               		.loc 1 569 1 is_stmt 1 view -0
 790               		.cfi_startproc
 791               		.loc 1 569 1 is_stmt 0 view .LVU255
 792 0000 CF93      		push r28
 793               	.LCFI14:
 794               		.cfi_def_cfa_offset 3
 795               		.cfi_offset 28, -2
 796 0002 DF93      		push r29
 797               	.LCFI15:
 798               		.cfi_def_cfa_offset 4
 799               		.cfi_offset 29, -3
 800               	/* prologue: function */
 801               	/* frame size = 0 */
 802               	/* stack size = 2 */
 803               	.L__stack_usage = 2
 804 0004 EC01      		movw r28,r24
 570:utils/uart10x.c ****     while (*s) 
 805               		.loc 1 570 5 is_stmt 1 view .LVU256
 806               	.LVL52:
 807               	.L32:
 808               		.loc 1 570 12 is_stmt 0 view .LVU257
 809 0006 8991      		ld r24,Y+
 810               	.LVL53:
 811               		.loc 1 570 11 view .LVU258
 812 0008 8111      		cpse r24,__zero_reg__
 813 000a 00C0      		rjmp .L33
 814               	/* epilogue start */
 571:utils/uart10x.c ****       uart_putc(*s++);
 572:utils/uart10x.c **** 
 573:utils/uart10x.c **** }/* uart_puts */
 815               		.loc 1 573 1 view .LVU259
 816 000c DF91      		pop r29
 817 000e CF91      		pop r28
 818               	.LVL54:
 819               		.loc 1 573 1 view .LVU260
 820 0010 0895      		ret
 821               	.LVL55:
 822               	.L33:
 571:utils/uart10x.c ****       uart_putc(*s++);
 823               		.loc 1 571 7 is_stmt 1 view .LVU261
 571:utils/uart10x.c ****       uart_putc(*s++);
 824               		.loc 1 571 7 is_stmt 0 view .LVU262
 825 0012 0E94 0000 		call uart_putc
 826               	.LVL56:
 827 0016 00C0      		rjmp .L32
 828               		.cfi_endproc
 829               	.LFE16:
 831               		.section	.text.uart1_puts,"ax",@progbits
 832               	.global	uart1_puts
 834               	uart1_puts:
 835               	.LVL57:
 836               	.LFB17:
 574:utils/uart10x.c **** 
 575:utils/uart10x.c **** void uart1_puts(const char *t )
 576:utils/uart10x.c **** {
 837               		.loc 1 576 1 is_stmt 1 view -0
 838               		.cfi_startproc
 839               		.loc 1 576 1 is_stmt 0 view .LVU264
 840 0000 CF93      		push r28
 841               	.LCFI16:
 842               		.cfi_def_cfa_offset 3
 843               		.cfi_offset 28, -2
 844 0002 DF93      		push r29
 845               	.LCFI17:
 846               		.cfi_def_cfa_offset 4
 847               		.cfi_offset 29, -3
 848               	/* prologue: function */
 849               	/* frame size = 0 */
 850               	/* stack size = 2 */
 851               	.L__stack_usage = 2
 852 0004 EC01      		movw r28,r24
 577:utils/uart10x.c ****     while (*t) 
 853               		.loc 1 577 5 is_stmt 1 view .LVU265
 854               	.LVL58:
 855               	.L35:
 856               		.loc 1 577 12 is_stmt 0 view .LVU266
 857 0006 8991      		ld r24,Y+
 858               	.LVL59:
 859               		.loc 1 577 11 view .LVU267
 860 0008 8111      		cpse r24,__zero_reg__
 861 000a 00C0      		rjmp .L36
 862               	/* epilogue start */
 578:utils/uart10x.c ****       uart1_putc(*t++);
 579:utils/uart10x.c **** 
 580:utils/uart10x.c **** }/* uart1_puts */
 863               		.loc 1 580 1 view .LVU268
 864 000c DF91      		pop r29
 865 000e CF91      		pop r28
 866               	.LVL60:
 867               		.loc 1 580 1 view .LVU269
 868 0010 0895      		ret
 869               	.LVL61:
 870               	.L36:
 578:utils/uart10x.c ****       uart1_putc(*t++);
 871               		.loc 1 578 7 is_stmt 1 view .LVU270
 578:utils/uart10x.c ****       uart1_putc(*t++);
 872               		.loc 1 578 7 is_stmt 0 view .LVU271
 873 0012 0E94 0000 		call uart1_putc
 874               	.LVL62:
 875 0016 00C0      		rjmp .L35
 876               		.cfi_endproc
 877               	.LFE17:
 879               		.section	.text.uart_puts_p,"ax",@progbits
 880               	.global	uart_puts_p
 882               	uart_puts_p:
 883               	.LVL63:
 884               	.LFB18:
 581:utils/uart10x.c **** 
 582:utils/uart10x.c **** 
 583:utils/uart10x.c **** /*************************************************************************
 584:utils/uart10x.c **** Function: uart_puts_p()
 585:utils/uart10x.c **** Purpose:  transmit string from program memory to UART
 586:utils/uart10x.c **** Input:    program memory string to be transmitted
 587:utils/uart10x.c **** Returns:  none
 588:utils/uart10x.c **** **************************************************************************/
 589:utils/uart10x.c **** void uart_puts_p(const char *progmem_s )
 590:utils/uart10x.c **** {
 885               		.loc 1 590 1 is_stmt 1 view -0
 886               		.cfi_startproc
 887               		.loc 1 590 1 is_stmt 0 view .LVU273
 888 0000 CF93      		push r28
 889               	.LCFI18:
 890               		.cfi_def_cfa_offset 3
 891               		.cfi_offset 28, -2
 892 0002 DF93      		push r29
 893               	.LCFI19:
 894               		.cfi_def_cfa_offset 4
 895               		.cfi_offset 29, -3
 896               	/* prologue: function */
 897               	/* frame size = 0 */
 898               	/* stack size = 2 */
 899               	.L__stack_usage = 2
 900 0004 EC01      		movw r28,r24
 591:utils/uart10x.c ****     register char c;
 901               		.loc 1 591 5 is_stmt 1 view .LVU274
 592:utils/uart10x.c ****     
 593:utils/uart10x.c ****     while ( (c = pgm_read_byte(progmem_s++)) ) 
 902               		.loc 1 593 5 view .LVU275
 903               	.LVL64:
 904               	.L38:
 905               	.LBB6:
 906               		.loc 1 593 18 view .LVU276
 907               		.loc 1 593 18 view .LVU277
 908               		.loc 1 593 18 view .LVU278
 909 0006 FE01      		movw r30,r28
 910               	/* #APP */
 911               	 ;  593 "utils/uart10x.c" 1
 912 0008 8491      		lpm r24, Z
 913               		
 914               	 ;  0 "" 2
 915               	.LVL65:
 916               		.loc 1 593 18 view .LVU279
 917               		.loc 1 593 18 is_stmt 0 view .LVU280
 918               	/* #NOAPP */
 919 000a 2196      		adiw r28,1
 920               	.LVL66:
 921               		.loc 1 593 18 view .LVU281
 922               	.LBE6:
 923               		.loc 1 593 11 view .LVU282
 924 000c 8111      		cpse r24,__zero_reg__
 925 000e 00C0      		rjmp .L39
 926               	/* epilogue start */
 594:utils/uart10x.c ****       uart_putc(c);
 595:utils/uart10x.c **** 
 596:utils/uart10x.c **** }/* uart_puts_p */
 927               		.loc 1 596 1 view .LVU283
 928 0010 DF91      		pop r29
 929 0012 CF91      		pop r28
 930               	.LVL67:
 931               		.loc 1 596 1 view .LVU284
 932 0014 0895      		ret
 933               	.LVL68:
 934               	.L39:
 594:utils/uart10x.c ****       uart_putc(c);
 935               		.loc 1 594 7 is_stmt 1 view .LVU285
 936 0016 0E94 0000 		call uart_putc
 937               	.LVL69:
 594:utils/uart10x.c ****       uart_putc(c);
 938               		.loc 1 594 7 is_stmt 0 view .LVU286
 939 001a 00C0      		rjmp .L38
 940               		.cfi_endproc
 941               	.LFE18:
 943               		.section	.text.uart1_puts_p,"ax",@progbits
 944               	.global	uart1_puts_p
 946               	uart1_puts_p:
 947               	.LVL70:
 948               	.LFB19:
 597:utils/uart10x.c **** 
 598:utils/uart10x.c **** void uart1_puts_p(const char *progmem_t )
 599:utils/uart10x.c **** {
 949               		.loc 1 599 1 is_stmt 1 view -0
 950               		.cfi_startproc
 951               		.loc 1 599 1 is_stmt 0 view .LVU288
 952 0000 CF93      		push r28
 953               	.LCFI20:
 954               		.cfi_def_cfa_offset 3
 955               		.cfi_offset 28, -2
 956 0002 DF93      		push r29
 957               	.LCFI21:
 958               		.cfi_def_cfa_offset 4
 959               		.cfi_offset 29, -3
 960               	/* prologue: function */
 961               	/* frame size = 0 */
 962               	/* stack size = 2 */
 963               	.L__stack_usage = 2
 964 0004 EC01      		movw r28,r24
 600:utils/uart10x.c ****     register char c;
 965               		.loc 1 600 5 is_stmt 1 view .LVU289
 601:utils/uart10x.c ****     
 602:utils/uart10x.c ****     while ( (c = pgm_read_byte(progmem_t++)) ) 
 966               		.loc 1 602 5 view .LVU290
 967               	.LVL71:
 968               	.L41:
 969               	.LBB7:
 970               		.loc 1 602 18 view .LVU291
 971               		.loc 1 602 18 view .LVU292
 972               		.loc 1 602 18 view .LVU293
 973 0006 FE01      		movw r30,r28
 974               	/* #APP */
 975               	 ;  602 "utils/uart10x.c" 1
 976 0008 8491      		lpm r24, Z
 977               		
 978               	 ;  0 "" 2
 979               	.LVL72:
 980               		.loc 1 602 18 view .LVU294
 981               		.loc 1 602 18 is_stmt 0 view .LVU295
 982               	/* #NOAPP */
 983 000a 2196      		adiw r28,1
 984               	.LVL73:
 985               		.loc 1 602 18 view .LVU296
 986               	.LBE7:
 987               		.loc 1 602 11 view .LVU297
 988 000c 8111      		cpse r24,__zero_reg__
 989 000e 00C0      		rjmp .L42
 990               	/* epilogue start */
 603:utils/uart10x.c ****       uart1_putc(c);
 604:utils/uart10x.c **** 
 605:utils/uart10x.c **** }/* uart1_puts_p */
 991               		.loc 1 605 1 view .LVU298
 992 0010 DF91      		pop r29
 993 0012 CF91      		pop r28
 994               	.LVL74:
 995               		.loc 1 605 1 view .LVU299
 996 0014 0895      		ret
 997               	.LVL75:
 998               	.L42:
 603:utils/uart10x.c ****       uart1_putc(c);
 999               		.loc 1 603 7 is_stmt 1 view .LVU300
 1000 0016 0E94 0000 		call uart1_putc
 1001               	.LVL76:
 603:utils/uart10x.c ****       uart1_putc(c);
 1002               		.loc 1 603 7 is_stmt 0 view .LVU301
 1003 001a 00C0      		rjmp .L41
 1004               		.cfi_endproc
 1005               	.LFE19:
 1007               		.section	.text.isCharAvailable,"ax",@progbits
 1008               	.global	isCharAvailable
 1010               	isCharAvailable:
 1011               	.LFB20:
 606:utils/uart10x.c **** 
 607:utils/uart10x.c **** 
 608:utils/uart10x.c **** // UART polled functions
 609:utils/uart10x.c **** 
 610:utils/uart10x.c **** char isCharAvailable()
 611:utils/uart10x.c **** {	
 1012               		.loc 1 611 1 is_stmt 1 view -0
 1013               		.cfi_startproc
 1014               	/* prologue: function */
 1015               	/* frame size = 0 */
 1016               	/* stack size = 0 */
 1017               	.L__stack_usage = 0
 612:utils/uart10x.c **** 	// Does the RX0 bit of the USART Status and Control Register
 613:utils/uart10x.c **** 	// indicate a char has been received?
 614:utils/uart10x.c **** 	if ( (UCSR0A & (0x80)) ) return 1;
 1018               		.loc 1 614 2 view .LVU303
 1019               		.loc 1 614 8 is_stmt 0 view .LVU304
 1020 0000 8091 C000 		lds r24,192
 615:utils/uart10x.c **** 	else return 0;
 616:utils/uart10x.c **** }
 1021               		.loc 1 616 1 view .LVU305
 1022 0004 881F      		rol r24
 1023 0006 8827      		clr r24
 1024 0008 881F      		rol r24
 1025               	/* epilogue start */
 1026 000a 0895      		ret
 1027               		.cfi_endproc
 1028               	.LFE20:
 1030               		.section	.text.isCharAvailable_1,"ax",@progbits
 1031               	.global	isCharAvailable_1
 1033               	isCharAvailable_1:
 1034               	.LFB21:
 617:utils/uart10x.c **** 
 618:utils/uart10x.c **** char isCharAvailable_1()
 619:utils/uart10x.c **** {	
 1035               		.loc 1 619 1 is_stmt 1 view -0
 1036               		.cfi_startproc
 1037               	/* prologue: function */
 1038               	/* frame size = 0 */
 1039               	/* stack size = 0 */
 1040               	.L__stack_usage = 0
 620:utils/uart10x.c **** 	// Does the RX0 bit of the USART Status and Control Register
 621:utils/uart10x.c **** 	// indicate a char has been received?
 622:utils/uart10x.c **** 	if ( (UCSR1A & (0x80)) ) return 1;
 1041               		.loc 1 622 2 view .LVU307
 1042               		.loc 1 622 8 is_stmt 0 view .LVU308
 1043 0000 8091 C800 		lds r24,200
 623:utils/uart10x.c **** 	else return 0;
 624:utils/uart10x.c **** }
 1044               		.loc 1 624 1 view .LVU309
 1045 0004 881F      		rol r24
 1046 0006 8827      		clr r24
 1047 0008 881F      		rol r24
 1048               	/* epilogue start */
 1049 000a 0895      		ret
 1050               		.cfi_endproc
 1051               	.LFE21:
 1053               		.section	.text.receiveChar,"ax",@progbits
 1054               	.global	receiveChar
 1056               	receiveChar:
 1057               	.LFB22:
 625:utils/uart10x.c **** 
 626:utils/uart10x.c **** char receiveChar()
 627:utils/uart10x.c **** {
 1058               		.loc 1 627 1 is_stmt 1 view -0
 1059               		.cfi_startproc
 1060               	/* prologue: function */
 1061               	/* frame size = 0 */
 1062               	/* stack size = 0 */
 1063               	.L__stack_usage = 0
 628:utils/uart10x.c **** 	// Return the char in the UDR0 register
 629:utils/uart10x.c **** 	return UDR0;
 1064               		.loc 1 629 2 view .LVU311
 1065               		.loc 1 629 9 is_stmt 0 view .LVU312
 1066 0000 8091 C600 		lds r24,198
 1067               	/* epilogue start */
 630:utils/uart10x.c **** 	
 631:utils/uart10x.c **** }
 1068               		.loc 1 631 1 view .LVU313
 1069 0004 0895      		ret
 1070               		.cfi_endproc
 1071               	.LFE22:
 1073               		.section	.text.receiveChar_1,"ax",@progbits
 1074               	.global	receiveChar_1
 1076               	receiveChar_1:
 1077               	.LFB23:
 632:utils/uart10x.c **** 
 633:utils/uart10x.c **** char receiveChar_1()
 634:utils/uart10x.c **** {
 1078               		.loc 1 634 1 is_stmt 1 view -0
 1079               		.cfi_startproc
 1080               	/* prologue: function */
 1081               	/* frame size = 0 */
 1082               	/* stack size = 0 */
 1083               	.L__stack_usage = 0
 635:utils/uart10x.c **** 	// Return the char in the UDR2 register
 636:utils/uart10x.c **** 	return UDR1;
 1084               		.loc 1 636 2 view .LVU315
 1085               		.loc 1 636 9 is_stmt 0 view .LVU316
 1086 0000 8091 CE00 		lds r24,206
 1087               	/* epilogue start */
 637:utils/uart10x.c **** 	
 638:utils/uart10x.c **** }...
 1088               		.loc 1 638 1 view .LVU317
 1089 0004 0895      		ret
 1090               		.cfi_endproc
 1091               	.LFE23:
 1093               		.local	UART1_LastRxError
 1094               		.comm	UART1_LastRxError,1,1
 1095               		.local	UART1_RxTail
 1096               		.comm	UART1_RxTail,1,1
 1097               		.local	UART1_RxHead
 1098               		.comm	UART1_RxHead,1,1
 1099               		.local	UART1_TxTail
 1100               		.comm	UART1_TxTail,1,1
 1101               		.local	UART1_TxHead
 1102               		.comm	UART1_TxHead,1,1
 1103               		.local	UART1_RxBuf
 1104               		.comm	UART1_RxBuf,32,1
 1105               		.local	UART1_TxBuf
 1106               		.comm	UART1_TxBuf,32,1
 1107               		.local	UART_LastRxError
 1108               		.comm	UART_LastRxError,1,1
 1109               		.local	UART_RxTail
 1110               		.comm	UART_RxTail,1,1
 1111               		.local	UART_RxHead
 1112               		.comm	UART_RxHead,1,1
 1113               		.local	UART_TxTail
 1114               		.comm	UART_TxTail,1,1
 1115               		.local	UART_TxHead
 1116               		.comm	UART_TxHead,1,1
 1117               		.local	UART_RxBuf
 1118               		.comm	UART_RxBuf,32,1
 1119               		.local	UART_TxBuf
 1120               		.comm	UART_TxBuf,32,1
 1121               		.comm	portKey,1,1
 1122               		.text
 1123               	.Letext0:
 1124               		.file 2 "/usr/local/Cellar/avr-gcc/8.1.0/avr/include/stdint.h"
 1125               		.file 3 "/usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/include/stddef.h"
 1126               		.file 4 "/usr/local/Cellar/avr-gcc/8.1.0/avr/include/stdio.h"
 1127               		.file 5 "/usr/local/Cellar/avr-gcc/8.1.0/avr/include/stdlib.h"
 1128               		.file 6 "utils/uart.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 uart10x.c
/var/folders/my/0z6f376568j9tywzmdyvysy80000gn/T//cc7XbPw9.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/my/0z6f376568j9tywzmdyvysy80000gn/T//cc7XbPw9.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/my/0z6f376568j9tywzmdyvysy80000gn/T//cc7XbPw9.s:4      *ABS*:000000000000003f __SREG__
/var/folders/my/0z6f376568j9tywzmdyvysy80000gn/T//cc7XbPw9.s:5      *ABS*:000000000000003b __RAMPZ__
/var/folders/my/0z6f376568j9tywzmdyvysy80000gn/T//cc7XbPw9.s:6      *ABS*:0000000000000000 __tmp_reg__
/var/folders/my/0z6f376568j9tywzmdyvysy80000gn/T//cc7XbPw9.s:7      *ABS*:0000000000000001 __zero_reg__
/var/folders/my/0z6f376568j9tywzmdyvysy80000gn/T//cc7XbPw9.s:14     .text.__vector_25:0000000000000000 __vector_25
                            *ABS*:0000000000000002 __gcc_isr.n_pushed.001
/var/folders/my/0z6f376568j9tywzmdyvysy80000gn/T//cc7XbPw9.s:1110   .bss:0000000000000047 UART_RxHead
/var/folders/my/0z6f376568j9tywzmdyvysy80000gn/T//cc7XbPw9.s:1108   .bss:0000000000000046 UART_RxTail
/var/folders/my/0z6f376568j9tywzmdyvysy80000gn/T//cc7XbPw9.s:1116   .bss:000000000000004a UART_RxBuf
/var/folders/my/0z6f376568j9tywzmdyvysy80000gn/T//cc7XbPw9.s:1106   .bss:0000000000000045 UART_LastRxError
/var/folders/my/0z6f376568j9tywzmdyvysy80000gn/T//cc7XbPw9.s:119    .text.__vector_36:0000000000000000 __vector_36
                            *ABS*:0000000000000002 __gcc_isr.n_pushed.002
/var/folders/my/0z6f376568j9tywzmdyvysy80000gn/T//cc7XbPw9.s:1096   .bss:0000000000000002 UART1_RxHead
/var/folders/my/0z6f376568j9tywzmdyvysy80000gn/T//cc7XbPw9.s:1094   .bss:0000000000000001 UART1_RxTail
/var/folders/my/0z6f376568j9tywzmdyvysy80000gn/T//cc7XbPw9.s:1102   .bss:0000000000000005 UART1_RxBuf
                             .bss:0000000000000000 UART1_LastRxError
/var/folders/my/0z6f376568j9tywzmdyvysy80000gn/T//cc7XbPw9.s:223    .text.__vector_26:0000000000000000 __vector_26
                            *ABS*:0000000000000002 __gcc_isr.n_pushed.003
/var/folders/my/0z6f376568j9tywzmdyvysy80000gn/T//cc7XbPw9.s:1114   .bss:0000000000000049 UART_TxHead
/var/folders/my/0z6f376568j9tywzmdyvysy80000gn/T//cc7XbPw9.s:1112   .bss:0000000000000048 UART_TxTail
/var/folders/my/0z6f376568j9tywzmdyvysy80000gn/T//cc7XbPw9.s:1118   .bss:000000000000006a UART_TxBuf
/var/folders/my/0z6f376568j9tywzmdyvysy80000gn/T//cc7XbPw9.s:301    .text.__vector_37:0000000000000000 __vector_37
                            *ABS*:0000000000000002 __gcc_isr.n_pushed.004
/var/folders/my/0z6f376568j9tywzmdyvysy80000gn/T//cc7XbPw9.s:1100   .bss:0000000000000004 UART1_TxHead
/var/folders/my/0z6f376568j9tywzmdyvysy80000gn/T//cc7XbPw9.s:1098   .bss:0000000000000003 UART1_TxTail
/var/folders/my/0z6f376568j9tywzmdyvysy80000gn/T//cc7XbPw9.s:1104   .bss:0000000000000025 UART1_TxBuf
/var/folders/my/0z6f376568j9tywzmdyvysy80000gn/T//cc7XbPw9.s:379    .text.uart_init:0000000000000000 uart_init
/var/folders/my/0z6f376568j9tywzmdyvysy80000gn/T//cc7XbPw9.s:439    .text.uart1_init:0000000000000000 uart1_init
/var/folders/my/0z6f376568j9tywzmdyvysy80000gn/T//cc7XbPw9.s:499    .text.uart_getc:0000000000000000 uart_getc
/var/folders/my/0z6f376568j9tywzmdyvysy80000gn/T//cc7XbPw9.s:562    .text.uart1_getc:0000000000000000 uart1_getc
/var/folders/my/0z6f376568j9tywzmdyvysy80000gn/T//cc7XbPw9.s:625    .text.uart_putc:0000000000000000 uart_putc
                            *COM*:0000000000000001 portKey
/var/folders/my/0z6f376568j9tywzmdyvysy80000gn/T//cc7XbPw9.s:733    .text.uart1_putc:0000000000000000 uart1_putc
/var/folders/my/0z6f376568j9tywzmdyvysy80000gn/T//cc7XbPw9.s:786    .text.uart_puts:0000000000000000 uart_puts
/var/folders/my/0z6f376568j9tywzmdyvysy80000gn/T//cc7XbPw9.s:834    .text.uart1_puts:0000000000000000 uart1_puts
/var/folders/my/0z6f376568j9tywzmdyvysy80000gn/T//cc7XbPw9.s:882    .text.uart_puts_p:0000000000000000 uart_puts_p
/var/folders/my/0z6f376568j9tywzmdyvysy80000gn/T//cc7XbPw9.s:946    .text.uart1_puts_p:0000000000000000 uart1_puts_p
/var/folders/my/0z6f376568j9tywzmdyvysy80000gn/T//cc7XbPw9.s:1010   .text.isCharAvailable:0000000000000000 isCharAvailable
/var/folders/my/0z6f376568j9tywzmdyvysy80000gn/T//cc7XbPw9.s:1033   .text.isCharAvailable_1:0000000000000000 isCharAvailable_1
/var/folders/my/0z6f376568j9tywzmdyvysy80000gn/T//cc7XbPw9.s:1056   .text.receiveChar:0000000000000000 receiveChar
/var/folders/my/0z6f376568j9tywzmdyvysy80000gn/T//cc7XbPw9.s:1076   .text.receiveChar_1:0000000000000000 receiveChar_1

UNDEFINED SYMBOLS
__do_clear_bss
